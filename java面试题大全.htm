<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns:dt="uuid:C2F41010-65B3-11d1-A29F-00AA00C14882"
xmlns:m="http://schemas.microsoft.com/office/2004/12/omml"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=x-cp20936">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 15">
<meta name=Originator content="Microsoft Word 15">
<link rel=File-List href="java面试题大全.files/filelist.xml">
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Sun</o:Author>
  <o:LastAuthor>郭 洪雷</o:LastAuthor>
  <o:Revision>2</o:Revision>
  <o:TotalTime>1</o:TotalTime>
  <o:Created>2022-11-10T14:32:00Z</o:Created>
  <o:LastSaved>2022-11-10T14:32:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>2388</o:Words>
  <o:Characters>13616</o:Characters>
  <o:Lines>113</o:Lines>
  <o:Paragraphs>31</o:Paragraphs>
  <o:CharactersWithSpaces>15973</o:CharactersWithSpaces>
  <o:Version>16.00</o:Version>
 </o:DocumentProperties>
 <o:CustomDocumentProperties>
  <o:KSOProductBuildVer dt:dt="string">2052-10.1.0.7400</o:KSOProductBuildVer>
 </o:CustomDocumentProperties>
 <o:OfficeDocumentSettings>
  <o:AllowPNG/>
  <o:PixelsPerInch>120</o:PixelsPerInch>
 </o:OfficeDocumentSettings>
</xml><![endif]-->
<link rel=themeData href="java面试题大全.files/themedata.thmx">
<link rel=colorSchemeMapping href="java面试题大全.files/colorschememapping.xml">
<!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:TrackMoves>false</w:TrackMoves>
  <w:TrackFormatting/>
  <w:DrawingGridVerticalSpacing>7.8 磅</w:DrawingGridVerticalSpacing>
  <w:ValidateAgainstSchemas/>
  <w:SaveIfXMLInvalid>false</w:SaveIfXMLInvalid>
  <w:IgnoreMixedContent>false</w:IgnoreMixedContent>
  <w:AlwaysShowPlaceholderText>false</w:AlwaysShowPlaceholderText>
  <w:DoNotPromoteQF/>
  <w:LidThemeOther>EN-US</w:LidThemeOther>
  <w:LidThemeAsian>ZH-CN</w:LidThemeAsian>
  <w:LidThemeComplexScript>X-NONE</w:LidThemeComplexScript>
  <w:Compatibility>
   <w:SpaceForUL/>
   <w:BalanceSingleByteDoubleByteWidth/>
   <w:DoNotLeaveBackslashAlone/>
   <w:ULTrailSpace/>
   <w:DoNotExpandShiftReturn/>
   <w:AdjustLineHeightInTable/>
   <w:BreakWrappedTables/>
   <w:SnapToGridInCell/>
   <w:UseWord2010TableStyleRules/>
   <w:DontGrowAutofit/>
   <w:DontUseIndentAsNumberingTabStop/>
   <w:FELineBreak11/>
   <w:WW11IndentRules/>
   <w:DontAutofitConstrainedTables/>
   <w:AutofitLikeWW11/>
   <w:HangulWidthLikeWW11/>
   <w:UseNormalStyleForList/>
   <w:DontVertAlignCellWithSp/>
   <w:DontBreakConstrainedForcedTables/>
   <w:DontVertAlignInTxbx/>
   <w:Word11KerningPairs/>
   <w:CachedColBalance/>
   <w:UseFELayout/>
  </w:Compatibility>
  <m:mathPr>
   <m:mathFont m:val="Cambria Math"/>
   <m:brkBin m:val="before"/>
   <m:brkBinSub m:val="&#45;-"/>
   <m:smallFrac m:val="off"/>
   <m:dispDef/>
   <m:lMargin m:val="0"/>
   <m:rMargin m:val="0"/>
   <m:defJc m:val="centerGroup"/>
   <m:wrapIndent m:val="1440"/>
   <m:intLim m:val="subSup"/>
   <m:naryLim m:val="undOvr"/>
  </m:mathPr></w:WordDocument>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:LatentStyles DefLockedState="false" DefUnhideWhenUsed="false"
  DefSemiHidden="false" DefQFormat="false" LatentStyleCount="376">
  <w:LsdException Locked="false" QFormat="true" Name="Normal"/>
  <w:LsdException Locked="false" QFormat="true" Name="heading 1"/>
  <w:LsdException Locked="false" QFormat="true" Name="heading 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   QFormat="true" Name="heading 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   QFormat="true" Name="heading 4"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   QFormat="true" Name="heading 5"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   QFormat="true" Name="heading 6"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   QFormat="true" Name="heading 7"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   QFormat="true" Name="heading 8"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   QFormat="true" Name="heading 9"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   QFormat="true" Name="caption"/>
  <w:LsdException Locked="false" QFormat="true" Name="Title"/>
  <w:LsdException Locked="false" SemiHidden="true" Name="Default Paragraph Font"/>
  <w:LsdException Locked="false" QFormat="true" Name="Subtitle"/>
  <w:LsdException Locked="false" QFormat="true" Name="Strong"/>
  <w:LsdException Locked="false" QFormat="true" Name="Emphasis"/>
  <w:LsdException Locked="false" Priority="99" SemiHidden="true"
   UnhideWhenUsed="true" Name="HTML Top of Form"/>
  <w:LsdException Locked="false" Priority="99" SemiHidden="true"
   UnhideWhenUsed="true" Name="HTML Bottom of Form"/>
  <w:LsdException Locked="false" SemiHidden="true" Name="Normal Table"/>
  <w:LsdException Locked="false" Priority="99" SemiHidden="true"
   UnhideWhenUsed="true" Name="No List"/>
  <w:LsdException Locked="false" Priority="99" SemiHidden="true"
   UnhideWhenUsed="true" Name="Outline List 1"/>
  <w:LsdException Locked="false" Priority="99" SemiHidden="true"
   UnhideWhenUsed="true" Name="Outline List 2"/>
  <w:LsdException Locked="false" Priority="99" SemiHidden="true"
   UnhideWhenUsed="true" Name="Outline List 3"/>
  <w:LsdException Locked="false" Priority="99" SemiHidden="true"
   UnhideWhenUsed="true" Name="Placeholder Text"/>
  <w:LsdException Locked="false" Priority="99" QFormat="true" Name="No Spacing"/>
  <w:LsdException Locked="false" Priority="60" Name="Light Shading"/>
  <w:LsdException Locked="false" Priority="61" Name="Light List"/>
  <w:LsdException Locked="false" Priority="62" Name="Light Grid"/>
  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1"/>
  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2"/>
  <w:LsdException Locked="false" Priority="65" Name="Medium List 1"/>
  <w:LsdException Locked="false" Priority="66" Name="Medium List 2"/>
  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1"/>
  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2"/>
  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3"/>
  <w:LsdException Locked="false" Priority="70" Name="Dark List"/>
  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading"/>
  <w:LsdException Locked="false" Priority="72" Name="Colorful List"/>
  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid"/>
  <w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 1"/>
  <w:LsdException Locked="false" Priority="61" Name="Light List Accent 1"/>
  <w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 1"/>
  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 1"/>
  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 1"/>
  <w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 1"/>
  <w:LsdException Locked="false" Priority="99" SemiHidden="true"
   UnhideWhenUsed="true" Name="Revision"/>
  <w:LsdException Locked="false" Priority="99" QFormat="true"
   Name="List Paragraph"/>
  <w:LsdException Locked="false" Priority="99" QFormat="true" Name="Quote"/>
  <w:LsdException Locked="false" Priority="99" QFormat="true"
   Name="Intense Quote"/>
  <w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 1"/>
  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 1"/>
  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 1"/>
  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 1"/>
  <w:LsdException Locked="false" Priority="70" Name="Dark List Accent 1"/>
  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 1"/>
  <w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 1"/>
  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 1"/>
  <w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 2"/>
  <w:LsdException Locked="false" Priority="61" Name="Light List Accent 2"/>
  <w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 2"/>
  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 2"/>
  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 2"/>
  <w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 2"/>
  <w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 2"/>
  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 2"/>
  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 2"/>
  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 2"/>
  <w:LsdException Locked="false" Priority="70" Name="Dark List Accent 2"/>
  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 2"/>
  <w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 2"/>
  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 2"/>
  <w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 3"/>
  <w:LsdException Locked="false" Priority="61" Name="Light List Accent 3"/>
  <w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 3"/>
  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 3"/>
  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 3"/>
  <w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 3"/>
  <w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 3"/>
  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 3"/>
  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 3"/>
  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 3"/>
  <w:LsdException Locked="false" Priority="70" Name="Dark List Accent 3"/>
  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 3"/>
  <w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 3"/>
  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 3"/>
  <w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 4"/>
  <w:LsdException Locked="false" Priority="61" Name="Light List Accent 4"/>
  <w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 4"/>
  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 4"/>
  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 4"/>
  <w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 4"/>
  <w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 4"/>
  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 4"/>
  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 4"/>
  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 4"/>
  <w:LsdException Locked="false" Priority="70" Name="Dark List Accent 4"/>
  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 4"/>
  <w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 4"/>
  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 4"/>
  <w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 5"/>
  <w:LsdException Locked="false" Priority="61" Name="Light List Accent 5"/>
  <w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 5"/>
  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 5"/>
  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 5"/>
  <w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 5"/>
  <w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 5"/>
  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 5"/>
  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 5"/>
  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 5"/>
  <w:LsdException Locked="false" Priority="70" Name="Dark List Accent 5"/>
  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 5"/>
  <w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 5"/>
  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 5"/>
  <w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 6"/>
  <w:LsdException Locked="false" Priority="61" Name="Light List Accent 6"/>
  <w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 6"/>
  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 6"/>
  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 6"/>
  <w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 6"/>
  <w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 6"/>
  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 6"/>
  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 6"/>
  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 6"/>
  <w:LsdException Locked="false" Priority="70" Name="Dark List Accent 6"/>
  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 6"/>
  <w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 6"/>
  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 6"/>
  <w:LsdException Locked="false" Priority="19" QFormat="true"
   Name="Subtle Emphasis"/>
  <w:LsdException Locked="false" Priority="21" QFormat="true"
   Name="Intense Emphasis"/>
  <w:LsdException Locked="false" Priority="31" QFormat="true"
   Name="Subtle Reference"/>
  <w:LsdException Locked="false" Priority="32" QFormat="true"
   Name="Intense Reference"/>
  <w:LsdException Locked="false" Priority="33" QFormat="true" Name="Book Title"/>
  <w:LsdException Locked="false" Priority="37" SemiHidden="true"
   UnhideWhenUsed="true" Name="Bibliography"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true"
   UnhideWhenUsed="true" QFormat="true" Name="TOC Heading"/>
  <w:LsdException Locked="false" Priority="41" Name="Plain Table 1"/>
  <w:LsdException Locked="false" Priority="42" Name="Plain Table 2"/>
  <w:LsdException Locked="false" Priority="43" Name="Plain Table 3"/>
  <w:LsdException Locked="false" Priority="44" Name="Plain Table 4"/>
  <w:LsdException Locked="false" Priority="45" Name="Plain Table 5"/>
  <w:LsdException Locked="false" Priority="40" Name="Grid Table Light"/>
  <w:LsdException Locked="false" Priority="46" Name="Grid Table 1 Light"/>
  <w:LsdException Locked="false" Priority="47" Name="Grid Table 2"/>
  <w:LsdException Locked="false" Priority="48" Name="Grid Table 3"/>
  <w:LsdException Locked="false" Priority="49" Name="Grid Table 4"/>
  <w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark"/>
  <w:LsdException Locked="false" Priority="51" Name="Grid Table 6 Colorful"/>
  <w:LsdException Locked="false" Priority="52" Name="Grid Table 7 Colorful"/>
  <w:LsdException Locked="false" Priority="46"
   Name="Grid Table 1 Light Accent 1"/>
  <w:LsdException Locked="false" Priority="47" Name="Grid Table 2 Accent 1"/>
  <w:LsdException Locked="false" Priority="48" Name="Grid Table 3 Accent 1"/>
  <w:LsdException Locked="false" Priority="49" Name="Grid Table 4 Accent 1"/>
  <w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark Accent 1"/>
  <w:LsdException Locked="false" Priority="51"
   Name="Grid Table 6 Colorful Accent 1"/>
  <w:LsdException Locked="false" Priority="52"
   Name="Grid Table 7 Colorful Accent 1"/>
  <w:LsdException Locked="false" Priority="46"
   Name="Grid Table 1 Light Accent 2"/>
  <w:LsdException Locked="false" Priority="47" Name="Grid Table 2 Accent 2"/>
  <w:LsdException Locked="false" Priority="48" Name="Grid Table 3 Accent 2"/>
  <w:LsdException Locked="false" Priority="49" Name="Grid Table 4 Accent 2"/>
  <w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark Accent 2"/>
  <w:LsdException Locked="false" Priority="51"
   Name="Grid Table 6 Colorful Accent 2"/>
  <w:LsdException Locked="false" Priority="52"
   Name="Grid Table 7 Colorful Accent 2"/>
  <w:LsdException Locked="false" Priority="46"
   Name="Grid Table 1 Light Accent 3"/>
  <w:LsdException Locked="false" Priority="47" Name="Grid Table 2 Accent 3"/>
  <w:LsdException Locked="false" Priority="48" Name="Grid Table 3 Accent 3"/>
  <w:LsdException Locked="false" Priority="49" Name="Grid Table 4 Accent 3"/>
  <w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark Accent 3"/>
  <w:LsdException Locked="false" Priority="51"
   Name="Grid Table 6 Colorful Accent 3"/>
  <w:LsdException Locked="false" Priority="52"
   Name="Grid Table 7 Colorful Accent 3"/>
  <w:LsdException Locked="false" Priority="46"
   Name="Grid Table 1 Light Accent 4"/>
  <w:LsdException Locked="false" Priority="47" Name="Grid Table 2 Accent 4"/>
  <w:LsdException Locked="false" Priority="48" Name="Grid Table 3 Accent 4"/>
  <w:LsdException Locked="false" Priority="49" Name="Grid Table 4 Accent 4"/>
  <w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark Accent 4"/>
  <w:LsdException Locked="false" Priority="51"
   Name="Grid Table 6 Colorful Accent 4"/>
  <w:LsdException Locked="false" Priority="52"
   Name="Grid Table 7 Colorful Accent 4"/>
  <w:LsdException Locked="false" Priority="46"
   Name="Grid Table 1 Light Accent 5"/>
  <w:LsdException Locked="false" Priority="47" Name="Grid Table 2 Accent 5"/>
  <w:LsdException Locked="false" Priority="48" Name="Grid Table 3 Accent 5"/>
  <w:LsdException Locked="false" Priority="49" Name="Grid Table 4 Accent 5"/>
  <w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark Accent 5"/>
  <w:LsdException Locked="false" Priority="51"
   Name="Grid Table 6 Colorful Accent 5"/>
  <w:LsdException Locked="false" Priority="52"
   Name="Grid Table 7 Colorful Accent 5"/>
  <w:LsdException Locked="false" Priority="46"
   Name="Grid Table 1 Light Accent 6"/>
  <w:LsdException Locked="false" Priority="47" Name="Grid Table 2 Accent 6"/>
  <w:LsdException Locked="false" Priority="48" Name="Grid Table 3 Accent 6"/>
  <w:LsdException Locked="false" Priority="49" Name="Grid Table 4 Accent 6"/>
  <w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark Accent 6"/>
  <w:LsdException Locked="false" Priority="51"
   Name="Grid Table 6 Colorful Accent 6"/>
  <w:LsdException Locked="false" Priority="52"
   Name="Grid Table 7 Colorful Accent 6"/>
  <w:LsdException Locked="false" Priority="46" Name="List Table 1 Light"/>
  <w:LsdException Locked="false" Priority="47" Name="List Table 2"/>
  <w:LsdException Locked="false" Priority="48" Name="List Table 3"/>
  <w:LsdException Locked="false" Priority="49" Name="List Table 4"/>
  <w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark"/>
  <w:LsdException Locked="false" Priority="51" Name="List Table 6 Colorful"/>
  <w:LsdException Locked="false" Priority="52" Name="List Table 7 Colorful"/>
  <w:LsdException Locked="false" Priority="46"
   Name="List Table 1 Light Accent 1"/>
  <w:LsdException Locked="false" Priority="47" Name="List Table 2 Accent 1"/>
  <w:LsdException Locked="false" Priority="48" Name="List Table 3 Accent 1"/>
  <w:LsdException Locked="false" Priority="49" Name="List Table 4 Accent 1"/>
  <w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark Accent 1"/>
  <w:LsdException Locked="false" Priority="51"
   Name="List Table 6 Colorful Accent 1"/>
  <w:LsdException Locked="false" Priority="52"
   Name="List Table 7 Colorful Accent 1"/>
  <w:LsdException Locked="false" Priority="46"
   Name="List Table 1 Light Accent 2"/>
  <w:LsdException Locked="false" Priority="47" Name="List Table 2 Accent 2"/>
  <w:LsdException Locked="false" Priority="48" Name="List Table 3 Accent 2"/>
  <w:LsdException Locked="false" Priority="49" Name="List Table 4 Accent 2"/>
  <w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark Accent 2"/>
  <w:LsdException Locked="false" Priority="51"
   Name="List Table 6 Colorful Accent 2"/>
  <w:LsdException Locked="false" Priority="52"
   Name="List Table 7 Colorful Accent 2"/>
  <w:LsdException Locked="false" Priority="46"
   Name="List Table 1 Light Accent 3"/>
  <w:LsdException Locked="false" Priority="47" Name="List Table 2 Accent 3"/>
  <w:LsdException Locked="false" Priority="48" Name="List Table 3 Accent 3"/>
  <w:LsdException Locked="false" Priority="49" Name="List Table 4 Accent 3"/>
  <w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark Accent 3"/>
  <w:LsdException Locked="false" Priority="51"
   Name="List Table 6 Colorful Accent 3"/>
  <w:LsdException Locked="false" Priority="52"
   Name="List Table 7 Colorful Accent 3"/>
  <w:LsdException Locked="false" Priority="46"
   Name="List Table 1 Light Accent 4"/>
  <w:LsdException Locked="false" Priority="47" Name="List Table 2 Accent 4"/>
  <w:LsdException Locked="false" Priority="48" Name="List Table 3 Accent 4"/>
  <w:LsdException Locked="false" Priority="49" Name="List Table 4 Accent 4"/>
  <w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark Accent 4"/>
  <w:LsdException Locked="false" Priority="51"
   Name="List Table 6 Colorful Accent 4"/>
  <w:LsdException Locked="false" Priority="52"
   Name="List Table 7 Colorful Accent 4"/>
  <w:LsdException Locked="false" Priority="46"
   Name="List Table 1 Light Accent 5"/>
  <w:LsdException Locked="false" Priority="47" Name="List Table 2 Accent 5"/>
  <w:LsdException Locked="false" Priority="48" Name="List Table 3 Accent 5"/>
  <w:LsdException Locked="false" Priority="49" Name="List Table 4 Accent 5"/>
  <w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark Accent 5"/>
  <w:LsdException Locked="false" Priority="51"
   Name="List Table 6 Colorful Accent 5"/>
  <w:LsdException Locked="false" Priority="52"
   Name="List Table 7 Colorful Accent 5"/>
  <w:LsdException Locked="false" Priority="46"
   Name="List Table 1 Light Accent 6"/>
  <w:LsdException Locked="false" Priority="47" Name="List Table 2 Accent 6"/>
  <w:LsdException Locked="false" Priority="48" Name="List Table 3 Accent 6"/>
  <w:LsdException Locked="false" Priority="49" Name="List Table 4 Accent 6"/>
  <w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark Accent 6"/>
  <w:LsdException Locked="false" Priority="51"
   Name="List Table 6 Colorful Accent 6"/>
  <w:LsdException Locked="false" Priority="52"
   Name="List Table 7 Colorful Accent 6"/>
  <w:LsdException Locked="false" Priority="99" SemiHidden="true"
   UnhideWhenUsed="true" Name="Mention"/>
  <w:LsdException Locked="false" Priority="99" SemiHidden="true"
   UnhideWhenUsed="true" Name="Smart Hyperlink"/>
  <w:LsdException Locked="false" Priority="99" SemiHidden="true"
   UnhideWhenUsed="true" Name="Hashtag"/>
  <w:LsdException Locked="false" Priority="99" SemiHidden="true"
   UnhideWhenUsed="true" Name="Unresolved Mention"/>
  <w:LsdException Locked="false" Priority="99" SemiHidden="true"
   UnhideWhenUsed="true" Name="Smart Link"/>
 </w:LatentStyles>
</xml><![endif]-->
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:宋体;
	panose-1:2 1 6 0 3 1 1 1 1 1;
	mso-font-alt:SimSun;
	mso-font-charset:134;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:3 680460288 22 0 262145 0;}
@font-face
	{font-family:"Cambria Math";
	panose-1:2 4 5 3 5 4 6 3 2 4;
	mso-font-charset:0;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:3 0 0 0 1 0;}
@font-face
	{font-family:Calibri;
	panose-1:2 15 5 2 2 2 4 3 2 4;
	mso-font-charset:0;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:-469750017 -1073732485 9 0 511 0;}
@font-face
	{font-family:微软雅黑;
	panose-1:2 11 5 3 2 2 4 2 2 4;
	mso-font-charset:134;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:-2147483001 718224464 22 0 262175 0;}
@font-face
	{font-family:"\@微软雅黑";
	mso-font-charset:134;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:-2147483001 718224464 22 0 262175 0;}
@font-face
	{font-family:"\@宋体";
	panose-1:2 1 6 0 3 1 1 1 1 1;
	mso-font-charset:134;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:3 680460288 22 0 262145 0;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-parent:"";
	margin:0cm;
	text-align:justify;
	text-justify:inter-ideograph;
	mso-pagination:none;
	font-size:10.5pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Calibri",sans-serif;
	mso-fareast-font-family:宋体;
	mso-bidi-font-family:"Times New Roman";
	mso-font-kerning:1.0pt;}
h2
	{mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-next:正文;
	mso-margin-top-alt:auto;
	margin-right:0cm;
	mso-margin-bottom-alt:auto;
	margin-left:0cm;
	mso-pagination:none;
	mso-outline-level:2;
	font-size:18.0pt;
	font-family:宋体;
	font-weight:bold;
	mso-bidi-font-weight:normal;}
strong
	{mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-bidi-font-weight:normal;}
p
	{mso-style-unhide:no;
	mso-margin-top-alt:auto;
	margin-right:0cm;
	mso-margin-bottom-alt:auto;
	margin-left:0cm;
	mso-pagination:none;
	font-size:12.0pt;
	font-family:"Calibri",sans-serif;
	mso-fareast-font-family:宋体;
	mso-bidi-font-family:"Times New Roman";}
.MsoChpDefault
	{mso-style-type:export-only;
	mso-default-props:yes;
	mso-fareast-font-family:宋体;}
@page WordSection1
	{size:595.3pt 841.9pt;
	margin:72.0pt 90.0pt 72.0pt 90.0pt;
	mso-header-margin:42.55pt;
	mso-footer-margin:49.6pt;
	mso-paper-source:0;
	layout-grid:15.6pt;}
div.WordSection1
	{page:WordSection1;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:普通表格;
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-unhide:no;
	mso-style-parent:"";
	mso-padding-alt:0cm 5.4pt 0cm 5.4pt;
	mso-para-margin:0cm;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman",serif;}
</style>
<![endif]--><!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="1026"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body lang=ZH-CN style='tab-interval:21.0pt;word-wrap:break-word;text-justify-trim:
punctuation'>

<div class=WordSection1 style='layout-grid:15.6pt'>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><strong><span
style='font-size:18.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>基本概念<span lang=EN-US><o:p></o:p></span></span></strong></p>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white;font-weight:normal'>操作系统中<span lang=EN-US>
heap </span>和<span lang=EN-US> stack </span>的区别<span lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white;font-weight:normal'>什么是基于注解的切面实现<span
lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white;font-weight:normal'>什么是 对象<span
lang=EN-US>/</span>关系 映射集成模块<span lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white;font-weight:normal'>什么是<span lang=EN-US>
Java </span>的反射机制<span lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white;font-weight:normal'>什么是<span lang=EN-US>
ACID<o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span lang=EN-US
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white;font-weight:normal'>BS</span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white;font-weight:normal'>与<span
lang=EN-US>CS</span>的联系与区别<span lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span lang=EN-US
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white;font-weight:normal'>Cookie
</span><span style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white;font-weight:normal'>和<span
lang=EN-US> Session</span>的区别<span lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span lang=EN-US
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white;font-weight:normal'>fail-fast
</span><span style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white;font-weight:normal'>与<span
lang=EN-US> fail-safe </span>机制有什么区别<span lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span lang=EN-US
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white;font-weight:normal'>get
</span><span style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white;font-weight:normal'>和<span
lang=EN-US> post</span>请求的区别<span lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span lang=EN-US
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white;font-weight:normal'>Interface
</span><span style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white;font-weight:normal'>与<span
lang=EN-US> abstract </span>类的区别<span lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span lang=EN-US
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white;font-weight:normal'>IOC</span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white;font-weight:normal'>的优点是什么<span
lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span lang=EN-US
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white;font-weight:normal'>IO </span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white;font-weight:normal'>和<span
lang=EN-US> NIO</span>的区别，<span lang=EN-US>NIO</span>优点<span lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span lang=EN-US
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white;font-weight:normal'>Java
8 / Java 7 </span><span style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;
mso-bidi-font-family:微软雅黑;color:#333333;letter-spacing:.4pt;background:white;
font-weight:normal'>为我们提供了什么新功能<span lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white;font-weight:normal'>什么是竞态条件？ 举个例子说明。<span
lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span lang=EN-US
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white;font-weight:normal'>JRE</span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white;font-weight:normal'>、<span
lang=EN-US>JDK</span>、<span lang=EN-US>JVM </span>及<span lang=EN-US> JIT </span>之间有什么不同<span
lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span lang=EN-US
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white;font-weight:normal'>MVC</span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white;font-weight:normal'>的各个部分都有那些技术来实现<span
lang=EN-US>?</span>如何实现<span lang=EN-US>?<o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span lang=EN-US
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white;font-weight:normal'>RPC
</span><span style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white;font-weight:normal'>通信和<span
lang=EN-US> RMI </span>区别<span lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white;font-weight:normal'>什么是<span lang=EN-US>
Web Service</span>（<span lang=EN-US>Web</span>服务）<span lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span lang=EN-US
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white;font-weight:normal'>JSWDL</span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white;font-weight:normal'>开发包的介绍。<span
lang=EN-US>JAXP</span>、<span lang=EN-US>JAXM</span>的解释。<span lang=EN-US>SOAP</span>、<span
lang=EN-US>UDDI,WSDL</span>解释。<span lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span lang=EN-US
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white;font-weight:normal'>WEB</span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white;font-weight:normal'>容器主要有哪些功能<span
lang=EN-US>? </span>并请列出一些常见的<span lang=EN-US>WEB</span>容器名字。<span lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white;font-weight:normal'>一个”<span lang=EN-US>.java</span>”源文件中是否可以包含多个类（不是内部类）？有什么限制<span
lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white;font-weight:normal'>简单说说你了解的类加载器。是否实现过类加载器<span
lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white;font-weight:normal'>解释一下什么叫<span
lang=EN-US>AOP</span>（面向切面编程）<span lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white;font-weight:normal'>请简述<span lang=EN-US>
Servlet </span>的生命周期及其相关的方法<span lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white;font-weight:normal'>请简述一下<span lang=EN-US>
Ajax </span>的原理及实现步骤<span lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white;font-weight:normal'>简单描述<span lang=EN-US>Struts</span>的主要功能<span
lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white;font-weight:normal'>什么是<span lang=EN-US> N
</span>层架构<span lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white;font-weight:normal'>什么是<span lang=EN-US>CORBA</span>？用途是什么<span
lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white;font-weight:normal'>什么是<span lang=EN-US>Java</span>虚拟机？为什么<span
lang=EN-US>Java</span>被称作是“平台无关的编程语言”<span lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white;font-weight:normal'>什么是正则表达式？用途是什么？哪个包使用正则表达式来实现模式匹配<span
lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white;font-weight:normal'>什么是懒加载（<span
lang=EN-US>Lazy Loading</span>）<span lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white;font-weight:normal'>什么是尾递归，为什么需要尾递归<span
lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white;font-weight:normal'>什么是控制反转（<span
lang=EN-US>Inversion of Control</span>）与依赖注入（<span lang=EN-US>Dependency
Injection</span>）<span lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.0pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white'>关键字</span><span lang=EN-US
style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt'><o:p></o:p></span></h2>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><strong><span
lang=EN-US style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>finalize<o:p></o:p></span></strong></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>什么是<span lang=EN-US>finalize()</span>方法<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>finalize()</span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>方法什么时候被调用<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>析构函数<span lang=EN-US>(finalization)</span>的目的是什么<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>final </span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>和<span lang=EN-US>
finalize </span>的区别<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>final<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>final</span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>关键字有哪些用法<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>final </span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>与<span lang=EN-US>
static </span>关键字可以用于哪里？它们的作用是什么<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>final, finally,
finalize</span><span style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;
mso-bidi-font-family:微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>的区别<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>final</span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>、<span lang=EN-US>finalize
</span>和<span lang=EN-US> finally </span>的不同之处？<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>能否在运行时向<span
lang=EN-US> static final </span>类型的赋值<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>使用<span lang=EN-US>final</span>关键字修饰一个变量时，是引用不能变，还是引用的对象不能变<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>一个类被声明为<span
lang=EN-US>final</span>类型，表示了什么意思<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>throws, throw, try,
catch, finally</span><span style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;
mso-bidi-font-family:微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>分别代表什么意义<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><strong><span
lang=EN-US style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>Java </span></strong><strong><span
style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>有几种修饰符？分别用来修饰什么</span></strong><span
lang=EN-US style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'><br>
<strong>volatile<o:p></o:p></strong></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>volatile </span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>修饰符的有过什么实践<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>volatile </span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>变量是什么？<span
lang=EN-US>volatile </span>变量和<span lang=EN-US> atomic </span>变量有什么不同<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>volatile </span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>类型变量提供什么保证？能使得一个非原子操作变成原子操作吗<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>能创建<span lang=EN-US>
volatile </span>数组吗？<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><strong><span
lang=EN-US style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>transient</span></strong><strong><span
style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>变量有什么特点</span></strong><span
lang=EN-US style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'><br>
<strong>super</strong></span><strong><span style='font-size:12.0pt;font-family:
"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;letter-spacing:.4pt;
background:white'>什么时候使用</span></strong><span lang=EN-US style='font-size:12.0pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white'><br>
<strong>public static void </strong></span><strong><span style='font-size:12.0pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white'>写成<span lang=EN-US> static public void</span>会怎样</span></strong><span
lang=EN-US style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'><br>
</span><strong><span style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;
mso-bidi-font-family:微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>说明一下<span
lang=EN-US>public static void main(String args[])</span>这段声明里每个关键字的作用</span></strong><span
lang=EN-US style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'><br>
</span><strong><span style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;
mso-bidi-font-family:微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>请说出作用域<span
lang=EN-US>public, private, protected, </span>以及不写时的区别</span></strong><span
lang=EN-US style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'><br>
<strong>sizeof </strong></span><strong><span style='font-size:12.0pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white'>是<span lang=EN-US>Java </span>的关键字吗</span></strong><span
lang=EN-US style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'><br>
<strong>static<o:p></o:p></strong></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>static class </span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>与<span lang=EN-US> non
static class</span>的区别<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>static </span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>关键字是什么意思？<span
lang=EN-US>Java</span>中是否可以覆盖<span lang=EN-US>(override)</span>一个<span
lang=EN-US>private</span>或者是<span lang=EN-US>static</span>的方法<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>静态类型有什么特点<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>main() </span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>方法为什么必须是静态的？能不能声明<span
lang=EN-US> main() </span>方法为非静态<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>是否可以从一个静态（<span
lang=EN-US>static</span>）方法内部发出对非静态（<span lang=EN-US>non-static</span>）方法的调用<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>静态变量在什么时候加载？编译期还是运行期？静态代码块加载的时机呢<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>成员方法是否可以访问静态变量？为什么静态方法不能访问成员变量<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><strong><span
lang=EN-US style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>switch<o:p></o:p></span></strong></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>switch </span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>语句中的表达式可以是什么类型数据<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>switch </span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>是否能作用在<span
lang=EN-US>byte </span>上，是否能作用在<span lang=EN-US>long </span>上，是否能作用在<span
lang=EN-US>String</span>上<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>while </span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>循环和<span lang=EN-US>
do </span>循环有什么不同<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>操作符<span lang=EN-US><o:p></o:p></span></span></p>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span lang=EN-US
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white;font-weight:normal'>&amp;</span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white;font-weight:normal'>操作符和<span
lang=EN-US>&amp;&amp;</span>操作符有什么区别<span lang=EN-US>?<o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span lang=EN-US
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white;font-weight:normal'>a =
a + b </span><span style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;
mso-bidi-font-family:微软雅黑;color:#333333;letter-spacing:.4pt;background:white;
font-weight:normal'>与<span lang=EN-US> a += b </span>的区别？<span lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white;font-weight:normal'>逻辑操作符<span lang=EN-US>
(&amp;,|,^)</span>与条件操作符<span lang=EN-US>(&amp;&amp;,||)</span>的区别<span
lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span lang=EN-US
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white;font-weight:normal'>3*0.1
== 0.3 </span><span style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;
mso-bidi-font-family:微软雅黑;color:#333333;letter-spacing:.4pt;background:white;
font-weight:normal'>将会返回什么？<span lang=EN-US>true </span>还是<span lang=EN-US>
false</span>？<span lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span lang=EN-US
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white;font-weight:normal'>float
f=3.4; </span><span style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;
mso-bidi-font-family:微软雅黑;color:#333333;letter-spacing:.4pt;background:white;
font-weight:normal'>是否正确？<span lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span lang=EN-US
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white;font-weight:normal'>short
s1 = 1; s1 = s1 + 1;</span><span style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;
mso-bidi-font-family:微软雅黑;color:#333333;letter-spacing:.4pt;background:white;
font-weight:normal'>有什么错<span lang=EN-US>?<o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.0pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white'>数据结构</span><span lang=EN-US
style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt'><o:p></o:p></span></h2>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><strong><span
style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>基础类型<span lang=EN-US>(Primitives)<o:p></o:p></span></span></strong></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>基础类型<span lang=EN-US>(Primitives)</span>与封装类型<span
lang=EN-US>(Wrappers)</span>的区别在哪里<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>简述九种基本数据类型的大小，以及他们的封装类<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>int </span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>和<span lang=EN-US>
Integer </span>哪个会占用更多的内存？<span lang=EN-US> int </span>和<span lang=EN-US>
Integer </span>有什么区别？<span lang=EN-US>parseInt()</span>函数在什么时候使用到<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>float</span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>和<span lang=EN-US>double</span>的默认值是多少<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>如何去小数四舍五入保留小数点后两位<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>char </span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>型变量中能不能存贮一个中文汉字，为什么<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><strong><span
style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>类型转换<span lang=EN-US><o:p></o:p></span></span></strong></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>怎样将<span lang=EN-US>
bytes </span>转换为<span lang=EN-US> long </span>类型<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>怎么将<span lang=EN-US>
byte </span>转换为<span lang=EN-US> String<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>如何将数值型字符转换为数字<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>我们能将<span lang=EN-US>
int </span>强制转换为<span lang=EN-US> byte </span>类型的变量吗？如果该值大于<span lang=EN-US>
byte </span>类型的范围，将会出现什么现象<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>能在不进行强制转换的情况下将一个<span
lang=EN-US> double </span>值赋值给<span lang=EN-US> long </span>类型的变量吗<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>类型向下转换是什么<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><strong><span
style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>数组<span lang=EN-US><o:p></o:p></span></span></strong></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>如何权衡是使用无序的数组还是有序的数组<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>怎么判断数组是<span
lang=EN-US> null </span>还是为空<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>怎么打印数组？ 怎样打印数组中的重复元素<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>Array </span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>和<span lang=EN-US>
ArrayList</span>有什么区别？什么时候应该使用<span lang=EN-US>Array</span>而不是<span lang=EN-US>ArrayList<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>数组和链表数据结构描述，各自的时间复杂度<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>数组有没有<span lang=EN-US>length()</span>这个方法<span
lang=EN-US>? String</span>有没有<span lang=EN-US>length()</span>这个方法<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><strong><span
style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>队列<span lang=EN-US><o:p></o:p></span></span></strong></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>队列和栈是什么，列出它们的区别<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>BlockingQueue</span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>是什么<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>简述<span lang=EN-US>
ConcurrentLinkedQueue LinkedBlockingQueue </span>的用处和不同之处。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><strong><span
lang=EN-US style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>ArrayList</span></strong><strong><span
style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>、<span lang=EN-US>Vector</span>、<span
lang=EN-US>LinkedList</span>的存储性能和特性</span></strong><span lang=EN-US
style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'><br>
<strong>String</strong><br>
<strong>StringBuffer<o:p></o:p></strong></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>ByteBuffer </span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>与<span lang=EN-US>
StringBuffer</span>有什么区别<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><strong><span
lang=EN-US style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>HashMap<o:p></o:p></span></strong></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>HashMap</span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>的工作原理是什么<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>内部的数据结构是什么<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>HashMap </span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>的<span lang=EN-US>
table</span>的容量如何确定？<span lang=EN-US>loadFactor </span>是什么？ 该容量如何变化？这种变化会带来什么问题？<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>HashMap </span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>实现的数据结构是什么？如何实现<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>HashMap </span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>和<span lang=EN-US>
HashTable</span>、<span lang=EN-US>ConcurrentHashMap </span>的区别<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>HashMap</span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>的遍历方式及效率<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>HashMap</span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>、<span lang=EN-US>LinkedMap</span>、<span
lang=EN-US>TreeMap</span>的区别<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>如何决定选用<span
lang=EN-US>HashMap</span>还是<span lang=EN-US>TreeMap<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>如果<span lang=EN-US>HashMap</span>的大小超过了负载因子<span
lang=EN-US>(load factor)</span>定义的容量，怎么办<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>HashMap </span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>是线程安全的吗？并发下使用的<span
lang=EN-US> Map </span>是什么，它们内部原理分别是什么，比如存储方式、<span lang=EN-US> hashcode</span>、扩容、
默认容量等<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><strong><span
lang=EN-US style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>HashSet<o:p></o:p></span></strong></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>HashSet</span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>和<span lang=EN-US>TreeSet</span>有什么区别<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>HashSet </span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>内部是如何工作的<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>WeakHashMap </span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>是怎么工作的？<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><strong><span
lang=EN-US style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>Set<o:p></o:p></span></strong></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>Set </span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>里的元素是不能重复的，那么用什么方法来区分重复与否呢？是用<span
lang=EN-US> == </span>还是<span lang=EN-US> equals()</span>？ 它们有何区别<span
lang=EN-US>?<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>TreeMap</span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>：<span lang=EN-US>TreeMap
</span>是采用什么树实现的？<span lang=EN-US>TreeMap</span>、<span lang=EN-US>HashMap</span>、<span
lang=EN-US>LindedHashMap</span>的区别。<span lang=EN-US>TreeMap</span>和<span
lang=EN-US>TreeSet</span>在排序时如何比较元素？<span lang=EN-US>Collections</span>工具类中的<span
lang=EN-US>sort()</span>方法如何比较元素？<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>TreeSet</span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>：一个已经构建好的<span
lang=EN-US> TreeSet</span>，怎么完成倒排序。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>EnumSet </span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>是什么<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><strong><span
lang=EN-US style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>Hash</span></strong><strong><span
style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>算法<span lang=EN-US><o:p></o:p></span></span></strong></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>Hashcode </span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>的作用<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>简述一致性<span lang=EN-US>
Hash </span>算法<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>有没有可能 两个不相等的对象有相同的<span
lang=EN-US> hashcode</span>？当两个对象<span lang=EN-US> hashcode </span>相同怎么办？如何获取值对象<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>为什么在重写<span
lang=EN-US> equals </span>方法的时候需要重写<span lang=EN-US> hashCode </span>方法？<span
lang=EN-US>equals</span>与<span lang=EN-US> hashCode </span>的异同点在哪里<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>a.hashCode() </span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>有什么用？与<span
lang=EN-US> a.equals(b) </span>有什么关系<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>hashCode() </span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>和<span lang=EN-US>
equals() </span>方法的重要性体现在什么地方<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>Object</span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>：<span lang=EN-US>Object</span>有哪些公用方法？<span
lang=EN-US>Object</span>类<span lang=EN-US>hashcode,equals </span>设计原则？<span
lang=EN-US> sun</span>为什么这么设计？<span lang=EN-US>Object</span>类的概述<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>如何在父类中为子类自动完成所有的<span
lang=EN-US> hashcode </span>和<span lang=EN-US> equals </span>实现？这么做有何优劣。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>可以在<span lang=EN-US>
hashcode() </span>中使用随机数字吗？<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><strong><span
lang=EN-US style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>LinkedHashMap<o:p></o:p></span></strong></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>LinkedHashMap </span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>和<span lang=EN-US>
PriorityQueue </span>的区别是什么<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><strong><span
lang=EN-US style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>List<o:p></o:p></span></strong></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>List, Set, Map</span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>三个接口，存取元素时各有什么特点<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>List, Set, Map </span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>是否继承自<span lang=EN-US>
Collection </span>接口<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>遍历一个<span lang=EN-US>
List </span>有哪些不同的方式<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>LinkedList<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>LinkedList </span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>是单向链表还是双向链表<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>LinkedList </span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>与<span lang=EN-US>
ArrayList </span>有什么区别<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>描述下<span lang=EN-US>
Java </span>中集合（<span lang=EN-US>Collections</span>），接口（<span lang=EN-US>Interfaces</span>），实现（<span
lang=EN-US>Implementations</span>）的概念。<span lang=EN-US>LinkedList </span>与<span
lang=EN-US> ArrayList </span>的区别是什么？<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>插入数据时，<span
lang=EN-US>ArrayList, LinkedList, Vector</span>谁速度较快？<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>ArrayList<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>ArrayList </span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>和<span lang=EN-US>
HashMap </span>的默认大小是多数<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>ArrayList </span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>和<span lang=EN-US>
LinkedList </span>的区别，什么时候用<span lang=EN-US> ArrayList</span>？<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>ArrayList </span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>和<span lang=EN-US> Set
</span>的区别？<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>ArrayList, LinkedList,
Vector</span><span style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;
mso-bidi-font-family:微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>的区别<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>ArrayList</span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>是如何实现的，<span
lang=EN-US>ArrayList </span>和<span lang=EN-US> LinkedList </span>的区别<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>ArrayList</span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>如何实现扩容<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>Array </span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>和<span lang=EN-US>
ArrayList </span>有何区别？什么时候更适合用<span lang=EN-US>Array<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>说出<span lang=EN-US>ArraList,Vector,
LinkedList</span>的存储性能和特性<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><strong><span
lang=EN-US style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>Map<o:p></o:p></span></strong></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>Map, Set, List, Queue,
Stack<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>Map </span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>接口提供了哪些不同的集合视图<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>为什么<span lang=EN-US>
Map </span>接口不继承<span lang=EN-US> Collection </span>接口<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><strong><span
lang=EN-US style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>Collections<o:p></o:p></span></strong></p>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white;font-weight:normal'>介绍<span lang=EN-US>Java</span>中的<span
lang=EN-US>Collection FrameWork</span>。集合类框架的基本接口有哪些<span lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span lang=EN-US
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white;font-weight:normal'>Collections</span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white;font-weight:normal'>类是什么？<span
lang=EN-US>Collection </span>和<span lang=EN-US> Collections</span>的区别？<span
lang=EN-US>Collection</span>、<span lang=EN-US>Map</span>的实现<span lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white;font-weight:normal'>集合类框架的最佳实践有哪些<span
lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white;font-weight:normal'>为什么<span lang=EN-US>
Collection </span>不从<span lang=EN-US> Cloneable </span>和<span lang=EN-US>
Serializable </span>接口继承<span lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white;font-weight:normal'>说出几点<span lang=EN-US>
Java </span>中使用<span lang=EN-US> Collections </span>的最佳实践？<span lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span lang=EN-US
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white;font-weight:normal'>Collections
</span><span style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white;font-weight:normal'>中 遗留类<span
lang=EN-US> (HashTable</span>、<span lang=EN-US>Vector) </span>和 现有类的区别<span
lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.0pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white'>什么是<span lang=EN-US> B+</span>树，<span
lang=EN-US>B-</span>树，列出实际的使用场景。</span><span lang=EN-US style='font-size:12.0pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt'><o:p></o:p></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.0pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white'>接口<span lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span lang=EN-US
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white;font-weight:normal'>Comparator
</span><span style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white;font-weight:normal'>与<span
lang=EN-US> Comparable </span>接口是干什么的？列出它们的区别<span lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.0pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white'>对象</span><span lang=EN-US
style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt'><o:p></o:p></span></h2>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><strong><span
style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>拷贝<span lang=EN-US>(clone)<o:p></o:p></span></span></strong></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>如何实现对象克隆<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>深拷贝和浅拷贝区别<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>深拷贝和浅拷贝如何实现激活机制<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>写<span lang=EN-US>clone()</span>方法时，通常都有一行代码，是什么<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><strong><span
style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>比较<span lang=EN-US><o:p></o:p></span></span></strong></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>在比较对象时，”<span
lang=EN-US>==</span>” 运算符和<span lang=EN-US> equals </span>运算有何区别<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>如果要重写一个对象的<span
lang=EN-US>equals</span>方法，还要考虑什么<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>两个对象值相同<span
lang=EN-US>(x.equals(y) == true)</span>，但却可有不同的<span lang=EN-US>hash code</span>，这句话对不对<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><strong><span
style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>构造器<span lang=EN-US><o:p></o:p></span></span></strong></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>构造器链是什么<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>创建对象时构造器的调用顺序<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><strong><span
style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>不可变对象<span lang=EN-US><o:p></o:p></span></span></strong></p>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white;font-weight:normal'>什么是不可变象（<span
lang=EN-US>immutable object</span>）<span lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white;font-weight:normal'>为什么<span lang=EN-US>
Java </span>中的<span lang=EN-US> String </span>是不可变的（<span lang=EN-US>Immutable</span>）<span
lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white;font-weight:normal'>如何构建不可变的类结构？关键点在哪里<span
lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white;font-weight:normal'>能创建一个包含可变对象的不可变对象吗<span
lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><strong><span style='font-size:
12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white'>如何对一组对象进行排序</span></strong><span
lang=EN-US style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt'><o:p></o:p></span></h2>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>方法<span lang=EN-US><o:p></o:p></span></span></p>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white;font-weight:normal'>构造器（<span lang=EN-US>constructor</span>）是否可被重写（<span
lang=EN-US>override</span>）<span lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white;font-weight:normal'>方法可以同时即是<span
lang=EN-US> static </span>又是<span lang=EN-US> synchronized </span>的吗<span
lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span lang=EN-US
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white;font-weight:normal'>abstract
</span><span style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white;font-weight:normal'>的<span
lang=EN-US> method</span>是否可同时是<span lang=EN-US> static</span>，是否可同时是<span
lang=EN-US> native</span>，是否可同时是<span lang=EN-US>synchronized<o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span lang=EN-US
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white;font-weight:normal'>Java</span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white;font-weight:normal'>支持哪种参数传递类型<span
lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white;font-weight:normal'>一个对象被当作参数传递到一个方法，是值传递还是引用传递<span
lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white;font-weight:normal'>当一个对象被当作参数传递到一个方法后，此方法可改变这个对象的属性，并可返回变化后的结果，那么这里到底是值传递还是引用传递<span
lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white;font-weight:normal'>我们能否重载<span
lang=EN-US>main()</span>方法<span lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white;font-weight:normal'>如果<span lang=EN-US>main</span>方法被声明为<span
lang=EN-US>private</span>会怎样<span lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span lang=EN-US
style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>GC</span><span
lang=EN-US style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt'><o:p></o:p></span></h2>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><strong><span
style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>概念<span lang=EN-US><o:p></o:p></span></span></strong></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>GC</span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>是什么？为什么要有<span
lang=EN-US>GC<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>什么时候会导致垃圾回收<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>GC</span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>是怎么样运行的<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>新老以及永久区是什么<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>GC </span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>有几种方式？怎么配置<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>什么时候一个对象会被<span
lang=EN-US>GC</span>？ 如何判断一个对象是否存活<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>System.gc()
Runtime.gc()</span><span style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;
mso-bidi-font-family:微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>会做什么事情？
能保证<span lang=EN-US> GC </span>执行吗<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>垃圾回收器可以马上回收内存吗？有什么办法主动通知虚拟机进行垃圾回收？<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>Minor GC </span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>、<span lang=EN-US>Major
GC</span>、<span lang=EN-US>Young GC </span>与<span lang=EN-US> Full GC</span>分别在什么时候发生<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>垃圾回收算法的实现原理<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>如果对象的引用被置为<span
lang=EN-US>null</span>，垃圾收集器是否会立即释放对象占用的内存？<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>垃圾回收的最佳做法是什么<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><strong><span
lang=EN-US style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>GC</span></strong><strong><span
style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>收集器有哪些<span
lang=EN-US><o:p></o:p></span></span></strong></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>垃圾回收器的基本原理是什么？<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>串行<span lang=EN-US>(serial)</span>收集器和吞吐量<span
lang=EN-US>(throughput)</span>收集器的区别是什么<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>Serial </span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>与<span lang=EN-US>
Parallel GC</span>之间的不同之处<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>CMS </span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>收集器 与<span lang=EN-US>
G1 </span>收集器的特点与区别<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>CMS</span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>垃圾回收器的工作过程<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>JVM </span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>中一次完整的<span
lang=EN-US> GC </span>流程是怎样的？ 对象如何晋升到老年代<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>吞吐量优先和响应优先的垃圾收集器选择<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><strong><span
lang=EN-US style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>GC</span></strong><strong><span
style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>策略<span lang=EN-US><o:p></o:p></span></span></strong></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>举个实际的场景，选择一个<span
lang=EN-US>GC</span>策略<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>JVM</span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>的永久代中会发生垃圾回收吗<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><strong><span
style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>收集方法<span lang=EN-US><o:p></o:p></span></span></strong></p>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white;font-weight:normal'>标记清除、标记整理、复制算法的原理与特点？分别用在什么地方<span
lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white;font-weight:normal'>如果让你优化收集方法，有什么思路<span
lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span lang=EN-US
style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>JVM</span><span
lang=EN-US style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt'><o:p></o:p></span></h2>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><strong><span
style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>参数<span lang=EN-US><o:p></o:p></span></span></strong></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>说说你知道的几种主要的<span
lang=EN-US>jvm </span>参数<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>-XX:+UseCompressedOops
</span><span style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>有什么作用<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><strong><span
style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>类加载器<span lang=EN-US>(ClassLoader)<o:p></o:p></span></span></strong></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>Java </span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>类加载器都有哪些<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>JVM</span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>如何加载字节码文件<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><strong><span
style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>内存管理<span lang=EN-US><o:p></o:p></span></span></strong></p>

<p style='margin-top:15.0pt;margin-right:0cm;margin-bottom:15.0pt;margin-left:
0cm;text-align:justify;text-justify:inter-ideograph;mso-line-height-alt:1.3pt;
mso-pagination:widow-orphan;background:white'><span lang=EN-US
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>JVM</span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>内存分哪几个区，每个区的作用是什么<span
lang=EN-US><o:p></o:p></span></span></p>

<p style='margin-top:15.0pt;margin-right:0cm;margin-bottom:15.0pt;margin-left:
0cm;text-align:justify;text-justify:inter-ideograph;mso-line-height-alt:1.3pt;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white'>一个对象从创建到销毁都是怎么在这些部分里存活和转移的<span
lang=EN-US><o:p></o:p></span></span></p>

<p style='margin-top:15.0pt;margin-right:0cm;margin-bottom:15.0pt;margin-left:
0cm;text-align:justify;text-justify:inter-ideograph;mso-line-height-alt:1.3pt;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white'>解释内存中的栈<span lang=EN-US>(stack)</span>、堆<span
lang=EN-US>(heap)</span>和方法区<span lang=EN-US>(method area)</span>的用法<span
lang=EN-US><o:p></o:p></span></span></p>

<p style='margin-top:15.0pt;margin-right:0cm;margin-bottom:15.0pt;margin-left:
0cm;text-align:justify;text-justify:inter-ideograph;mso-line-height-alt:1.3pt;
mso-pagination:widow-orphan;background:white'><span lang=EN-US
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>JVM</span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>中哪个参数是用来控制线程的栈堆栈小<span
lang=EN-US><o:p></o:p></span></span></p>

<p style='margin-top:15.0pt;margin-right:0cm;margin-bottom:15.0pt;margin-left:
0cm;text-align:justify;text-justify:inter-ideograph;mso-line-height-alt:1.3pt;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white'>简述内存分配与回收策略<span lang=EN-US><o:p></o:p></span></span></p>

<p style='margin-top:15.0pt;margin-right:0cm;margin-bottom:15.0pt;margin-left:
0cm;text-align:justify;text-justify:inter-ideograph;mso-line-height-alt:1.3pt;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white'>简述重排序，内存屏障，<span lang=EN-US>happen-before</span>，主内存，工作内存<span
lang=EN-US><o:p></o:p></span></span></p>

<p style='margin-top:15.0pt;margin-right:0cm;margin-bottom:15.0pt;margin-left:
0cm;text-align:justify;text-justify:inter-ideograph;mso-line-height-alt:1.3pt;
mso-pagination:widow-orphan;background:white'><span lang=EN-US
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>Java</span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>中存在内存泄漏问题吗？请举例说明<span
lang=EN-US><o:p></o:p></span></span></p>

<p style='margin-top:15.0pt;margin-right:0cm;margin-bottom:15.0pt;margin-left:
0cm;text-align:justify;text-justify:inter-ideograph;mso-line-height-alt:1.3pt;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white'>简述<span lang=EN-US> Java </span>中软引用（<span
lang=EN-US>SoftReferenc</span>）、弱引用（<span lang=EN-US>WeakReference</span>）和虚引用<span
lang=EN-US><o:p></o:p></span></span></p>

<p style='margin-top:15.0pt;margin-right:0cm;margin-bottom:15.0pt;margin-left:
0cm;text-align:justify;text-justify:inter-ideograph;mso-line-height-alt:1.3pt;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white'>内存映射缓存区是什么<span lang=EN-US><o:p></o:p></span></span></p>

<p style='margin-top:15.0pt;margin-right:0cm;margin-bottom:15.0pt;margin-left:
0cm;text-align:justify;text-justify:inter-ideograph;mso-line-height-alt:1.3pt;
mso-pagination:widow-orphan;background:white'><strong><span lang=EN-US
style='font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white'>jstack</span></strong><strong><span
style='font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white'>，<span lang=EN-US>jstat</span>，<span
lang=EN-US>jmap</span>，<span lang=EN-US>jconsole</span>怎么用</span></strong><span
lang=EN-US style='font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;
color:#333333;letter-spacing:.4pt;background:white'><br>
<strong>32 </strong></span><strong><span style='font-family:"微软雅黑",sans-serif;
mso-bidi-font-family:微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>位<span
lang=EN-US> JVM </span>和<span lang=EN-US> 64 </span>位<span lang=EN-US> JVM </span>的最大堆内存分别是多数？<span
lang=EN-US>32 </span>位和<span lang=EN-US> 64 </span>位的<span lang=EN-US> JVM</span>，<span
lang=EN-US>int </span>类型变量的长度是多数？</span></strong><span lang=EN-US
style='font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white'><br>
</span><strong><span style='font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>怎样通过<span lang=EN-US>
Java </span>程序来判断<span lang=EN-US> JVM </span>是<span lang=EN-US> 32 </span>位 还是<span
lang=EN-US> 64 </span>位</span></strong><span lang=EN-US style='font-family:
"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;letter-spacing:.4pt;
background:white'><br>
<strong>JVM</strong></span><strong><span style='font-family:"微软雅黑",sans-serif;
mso-bidi-font-family:微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>自身会维护缓存吗？是不是在堆中进行对象分配，操作系统的堆还是<span
lang=EN-US>JVM</span>自己管理堆</span></strong><span lang=EN-US style='font-family:
"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;letter-spacing:.4pt;
background:white'><br>
</span><strong><span style='font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>什么情况下会发生栈内存溢出</span></strong><span
lang=EN-US style='font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;
color:#333333;letter-spacing:.4pt;background:white'><br>
</span><strong><span style='font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>双亲委派模型是什么</span></strong><span
lang=EN-US style='font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;
color:#333333;letter-spacing:.4pt'><o:p></o:p></span></p>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.0pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white'>多线程</span><span lang=EN-US
style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt'><o:p></o:p></span></h2>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><strong><span
style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>基本概念<span lang=EN-US><o:p></o:p></span></span></strong></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>什么是线程<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>多线程的优点<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>多线程的几种实现方式<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>用<span lang=EN-US>
Runnable </span>还是<span lang=EN-US> Thread<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>什么是线程安全<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>Vector,
SimpleDateFormat </span><span style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;
mso-bidi-font-family:微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>是线程安全类吗<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>什么<span lang=EN-US>
Java </span>原型不是线程安全的<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>哪些集合类是线程安全的<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>多线程中的忙循环是什么<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>如何创建一个线程<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>编写多线程程序有几种实现方式<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>什么是线程局部变量<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>线程和进程有什么区别？进程间如何通讯，线程间如何通讯<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>什么是多线程环境下的伪共享（<span
lang=EN-US>false sharing</span>）<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>同步和异步有何异同，在什么情况下分别使用他们？举例说明<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><strong><span
lang=EN-US style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>Current<o:p></o:p></span></strong></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>ConcurrentHashMap </span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>和<span lang=EN-US>
Hashtable</span>的区别<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>ArrayBlockingQueue,
CountDownLatch</span><span style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;
mso-bidi-font-family:微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>的用法<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>ConcurrentHashMap</span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>的并发度是什么<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><strong><span
lang=EN-US style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>CyclicBarrier </span></strong><strong><span
style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>和<span lang=EN-US>
CountDownLatch</span>有什么不同？各自的内部原理和用法是什么</span></strong><span lang=EN-US
style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'><br>
<strong>Semaphore</strong></span><strong><span style='font-size:12.0pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white'>的用法</span></strong><span lang=EN-US
style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'><br>
<strong>Thread<o:p></o:p></strong></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>启动一个线程是调用<span
lang=EN-US> run() </span>还是<span lang=EN-US> start() </span>方法？<span
lang=EN-US>start() </span>和<span lang=EN-US> run() </span>方法有什么区别<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>调用<span lang=EN-US>start()</span>方法时会执行<span
lang=EN-US>run()</span>方法，为什么不能直接调用<span lang=EN-US>run()</span>方法<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>sleep() </span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>方法和对象的<span
lang=EN-US> wait() </span>方法都可以让线程暂停执行，它们有什么区别<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>yield</span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>方法有什么作用？<span
lang=EN-US>sleep() </span>方法和<span lang=EN-US> yield() </span>方法有什么区别<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>Java </span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>中如何停止一个线程<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>stop() </span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>和<span lang=EN-US>
suspend() </span>方法为何不推荐使用<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>如何在两个线程间共享数据<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>如何强制启动一个线程<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>如何让正在运行的线程暂停一段时间<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>什么是线程组，为什么在<span
lang=EN-US>Java</span>中不推荐使用<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>你是如何调用<span
lang=EN-US> wait</span>（方法的）？使用<span lang=EN-US> if </span>块还是循环？为什么<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><strong><span
style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>生命周期<span lang=EN-US><o:p></o:p></span></span></strong></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>有哪些不同的线程生命周期<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>线程状态，<span lang=EN-US>BLOCKED
</span>和<span lang=EN-US> WAITING </span>有什么区别<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>画一个线程的生命周期状态图<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><strong><span
lang=EN-US style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>ThreadLocal </span></strong><strong><span
style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>用途是什么，原理是什么，用的时候要注意什么</span></strong><span
lang=EN-US style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'><br>
<strong>ThreadPool<o:p></o:p></strong></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>线程池是什么？为什么要使用它<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>如何创建一个<span
lang=EN-US>Java</span>线程池<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>ThreadPool</span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>用法与优势<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>提交任务时，线程池队列已满时会发会生什么<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>newCache </span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>和<span lang=EN-US>
newFixed </span>有什么区别？简述原理。构造函数的各个参数的含义是什么，比如<span lang=EN-US> coreSize,
maxsize </span>等<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>线程池的实现策略<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>线程池的关闭方式有几种，各自的区别是什么<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>线程池中<span lang=EN-US>submit()
</span>和<span lang=EN-US> execute()</span>方法有什么区别？<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><strong><span
style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>线程调度<span lang=EN-US><o:p></o:p></span></span></strong></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>Java</span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>中用到的线程调度算法是什么<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>什么是多线程中的上下文切换<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>你对线程优先级的理解是什么<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>什么是线程调度器<span
lang=EN-US> (Thread Scheduler) </span>和时间分片<span lang=EN-US> (Time Slicing)<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><strong><span
style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>线程同步<span lang=EN-US><o:p></o:p></span></span></strong></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>请说出你所知的线程同步的方法<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>synchronized </span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>的原理是什么<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>synchronized </span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>和<span lang=EN-US>
ReentrantLock </span>有什么不同<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>什么场景下可以使用<span
lang=EN-US> volatile </span>替换<span lang=EN-US> synchronized<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>有<span lang=EN-US>T1</span>，<span
lang=EN-US>T2</span>，<span lang=EN-US>T3</span>三个线程，怎么确保它们按顺序执行？怎样保证<span
lang=EN-US>T2</span>在<span lang=EN-US>T1</span>执行完后执行，<span lang=EN-US>T3</span>在<span
lang=EN-US>T2</span>执行完后执行<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>同步块内的线程抛出异常会发生什么<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>当一个线程进入一个对象的<span
lang=EN-US> synchronized </span>方法<span lang=EN-US>A </span>之后，其它线程是否可进入此对象的<span
lang=EN-US> synchronized </span>方法<span lang=EN-US>B<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>使用<span lang=EN-US>
synchronized </span>修饰静态方法和非静态方法有什么区别<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>如何从给定集合那里创建一个<span
lang=EN-US> synchronized </span>的集合<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><strong><span
style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>锁<span lang=EN-US><o:p></o:p></span></span></strong></p>

<p style='margin-top:15.0pt;margin-right:0cm;margin-bottom:15.0pt;margin-left:
0cm;text-align:justify;text-justify:inter-ideograph;mso-line-height-alt:1.3pt;
mso-pagination:widow-orphan;background:white'><span lang=EN-US
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>Java Concurrency API </span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>中 的<span lang=EN-US>
Lock </span>接口是什么？对比同步它有什么优势<span lang=EN-US><o:p></o:p></span></span></p>

<p style='margin-top:15.0pt;margin-right:0cm;margin-bottom:15.0pt;margin-left:
0cm;text-align:justify;text-justify:inter-ideograph;mso-line-height-alt:1.3pt;
mso-pagination:widow-orphan;background:white'><span lang=EN-US
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>Lock </span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>与<span lang=EN-US>
Synchronized </span>的区别？<span lang=EN-US>Lock </span>接口比<span lang=EN-US> synchronized
</span>块的优势是什么<span lang=EN-US><o:p></o:p></span></span></p>

<p style='margin-top:15.0pt;margin-right:0cm;margin-bottom:15.0pt;margin-left:
0cm;text-align:justify;text-justify:inter-ideograph;mso-line-height-alt:1.3pt;
mso-pagination:widow-orphan;background:white'><span lang=EN-US
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>ReadWriteLock</span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>是什么？<span lang=EN-US><o:p></o:p></span></span></p>

<p style='margin-top:15.0pt;margin-right:0cm;margin-bottom:15.0pt;margin-left:
0cm;text-align:justify;text-justify:inter-ideograph;mso-line-height-alt:1.3pt;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white'>锁机制有什么用<span lang=EN-US><o:p></o:p></span></span></p>

<p style='margin-top:15.0pt;margin-right:0cm;margin-bottom:15.0pt;margin-left:
0cm;text-align:justify;text-justify:inter-ideograph;mso-line-height-alt:1.3pt;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white'>什么是乐观锁（<span lang=EN-US>Optimistic
Locking</span>）？如何实现乐观锁？如何避免<span lang=EN-US>ABA</span>问题<span lang=EN-US><o:p></o:p></span></span></p>

<p style='margin-top:15.0pt;margin-right:0cm;margin-bottom:15.0pt;margin-left:
0cm;text-align:justify;text-justify:inter-ideograph;mso-line-height-alt:1.3pt;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white'>解释以下名词：重排序，自旋锁，偏向锁，轻量级锁，可重入锁，公平锁，非公平锁，乐观锁，悲观锁<span
lang=EN-US><o:p></o:p></span></span></p>

<p style='margin-top:15.0pt;margin-right:0cm;margin-bottom:15.0pt;margin-left:
0cm;text-align:justify;text-justify:inter-ideograph;mso-line-height-alt:1.3pt;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white'>什么时候应该使用可重入锁<span lang=EN-US><o:p></o:p></span></span></p>

<p style='margin-top:15.0pt;margin-right:0cm;margin-bottom:15.0pt;margin-left:
0cm;text-align:justify;text-justify:inter-ideograph;mso-line-height-alt:1.3pt;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white'>简述锁的等级方法锁、对象锁、类锁<span lang=EN-US><o:p></o:p></span></span></p>

<p style='margin-top:15.0pt;margin-right:0cm;margin-bottom:15.0pt;margin-left:
0cm;text-align:justify;text-justify:inter-ideograph;mso-line-height-alt:1.3pt;
mso-pagination:widow-orphan;background:white'><span lang=EN-US
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>Java</span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>中活锁和死锁有什么区别？<span
lang=EN-US><o:p></o:p></span></span></p>

<p style='margin-top:15.0pt;margin-right:0cm;margin-bottom:15.0pt;margin-left:
0cm;text-align:justify;text-justify:inter-ideograph;mso-line-height-alt:1.3pt;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white'>什么是死锁<span lang=EN-US>(Deadlock)</span>？导致线程死锁的原因？如何确保<span
lang=EN-US> N </span>个线程可以访问<span lang=EN-US> N </span>个资源同时又不导致死锁<span
lang=EN-US><o:p></o:p></span></span></p>

<p style='margin-top:15.0pt;margin-right:0cm;margin-bottom:15.0pt;margin-left:
0cm;text-align:justify;text-justify:inter-ideograph;mso-line-height-alt:1.3pt;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white'>死锁与活锁的区别，死锁与饥饿的区别<span lang=EN-US><o:p></o:p></span></span></p>

<p style='margin-top:15.0pt;margin-right:0cm;margin-bottom:15.0pt;margin-left:
0cm;text-align:justify;text-justify:inter-ideograph;mso-line-height-alt:1.3pt;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white'>怎么检测一个线程是否拥有锁<span lang=EN-US><o:p></o:p></span></span></p>

<p style='margin-top:15.0pt;margin-right:0cm;margin-bottom:15.0pt;margin-left:
0cm;text-align:justify;text-justify:inter-ideograph;mso-line-height-alt:1.3pt;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white'>如何实现分布式锁<span lang=EN-US><o:p></o:p></span></span></p>

<p style='margin-top:15.0pt;margin-right:0cm;margin-bottom:15.0pt;margin-left:
0cm;text-align:justify;text-justify:inter-ideograph;mso-line-height-alt:1.3pt;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white'>有哪些无锁数据结构，他们实现的原理是什么<span lang=EN-US><o:p></o:p></span></span></p>

<p style='margin-top:15.0pt;margin-right:0cm;margin-bottom:15.0pt;margin-left:
0cm;text-align:justify;text-justify:inter-ideograph;mso-line-height-alt:1.3pt;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white'>读写锁可以用于什么应用场景<span lang=EN-US><o:p></o:p></span></span></p>

<p style='margin-top:15.0pt;margin-right:0cm;margin-bottom:15.0pt;margin-left:
0cm;text-align:justify;text-justify:inter-ideograph;mso-line-height-alt:1.3pt;
mso-pagination:widow-orphan;background:white'><strong><span lang=EN-US
style='font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white'>Executors</span></strong><strong><span
style='font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white'>类是什么？<span lang=EN-US> Executor</span>和<span
lang=EN-US>Executors</span>的区别</span></strong><span lang=EN-US
style='font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white'><br>
</span><strong><span style='font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>什么是<span lang=EN-US>Java</span>线程转储<span
lang=EN-US>(Thread Dump)</span>，如何得到它</span></strong><span lang=EN-US
style='font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white'><br>
</span><strong><span style='font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>如何在<span lang=EN-US>Java</span>中获取线程堆栈</span></strong><span
lang=EN-US style='font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;
color:#333333;letter-spacing:.4pt;background:white'><br>
</span><strong><span style='font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>说出<span lang=EN-US> 3 </span>条在<span
lang=EN-US> Java </span>中使用线程的最佳实践</span></strong><span lang=EN-US
style='font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white'><br>
</span><strong><span style='font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>在线程中你怎么处理不可捕捉异常</span></strong><span
lang=EN-US style='font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;
color:#333333;letter-spacing:.4pt;background:white'><br>
</span><strong><span style='font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>实际项目中使用多线程举例。你在多线程环境中遇到的常见的问题是什么？你是怎么解决它的</span></strong><span
lang=EN-US style='font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;
color:#333333;letter-spacing:.4pt;background:white'><br>
</span><strong><span style='font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>请说出与线程同步以及线程调度相关的方法</span></strong><span
lang=EN-US style='font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;
color:#333333;letter-spacing:.4pt;background:white'><br>
</span><strong><span style='font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>程序中有<span lang=EN-US>3</span>个<span
lang=EN-US> socket</span>，需要多少个线程来处理</span></strong><span lang=EN-US
style='font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white'><br>
</span><strong><span style='font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>假如有一个第三方接口，有很多个线程去调用获取数据，现在规定每秒钟最多有<span
lang=EN-US> 10 </span>个线程同时调用它，如何做到</span></strong><span lang=EN-US
style='font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white'><br>
</span><strong><span style='font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>如何在<span lang=EN-US>
Windows </span>和<span lang=EN-US> Linux </span>上查找哪个线程使用的<span lang=EN-US> CPU </span>时间最长</span></strong><span
lang=EN-US style='font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;
color:#333333;letter-spacing:.4pt;background:white'><br>
</span><strong><span style='font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>如何确保<span lang=EN-US>
main() </span>方法所在的线程是<span lang=EN-US> Java </span>程序最后结束的线程</span></strong><span
lang=EN-US style='font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;
color:#333333;letter-spacing:.4pt;background:white'><br>
</span><strong><span style='font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>非常多个线程（可能是不同机器），相互之间需要等待协调才能完成某种工作，问怎么设计这种协调方案</span></strong><span
lang=EN-US style='font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;
color:#333333;letter-spacing:.4pt;background:white'><br>
</span><strong><span style='font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>你需要实现一个高效的缓存，它允许多个用户读，但只允许一个用户写，以此来保持它的完整性，你会怎样去实现它</span></strong><span
lang=EN-US style='font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;
color:#333333;letter-spacing:.4pt'><o:p></o:p></span></p>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.0pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white'>异常</span><span lang=EN-US
style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt'><o:p></o:p></span></h2>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><strong><span
style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>基本概念<span lang=EN-US><o:p></o:p></span></span></strong></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>Error </span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>和<span lang=EN-US> Exception</span>有什么区别<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>UnsupportedOperationException</span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>是什么<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>NullPointerException </span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>和<span lang=EN-US>
ArrayIndexOutOfBoundException </span>之间有什么相同之处<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>什么是受检查的异常，什么是运行时异常<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>运行时异常与一般异常有何异同<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>简述一个你最常见到的<span
lang=EN-US>runtime exception(</span>运行时异常<span lang=EN-US>)<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><strong><span
lang=EN-US style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>finally<o:p></o:p></span></strong></p>

<p style='margin-top:15.0pt;margin-right:0cm;margin-bottom:15.0pt;margin-left:
0cm;text-align:justify;text-justify:inter-ideograph;mso-line-height-alt:1.3pt;
mso-pagination:widow-orphan;background:white'><span lang=EN-US
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>finally</span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>关键词在异常处理中如何使用<span
lang=EN-US><o:p></o:p></span></span></p>

<p style='margin-top:15.0pt;margin-right:0cm;margin-bottom:15.0pt;margin-left:
0cm;text-align:justify;text-justify:inter-ideograph;mso-line-height-alt:1.3pt;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white'>如果执行<span lang=EN-US>finally</span>代码块之前方法返回了结果，或者<span
lang=EN-US>JVM</span>退出了，<span lang=EN-US>finally</span>块中的代码还会执行吗<span
lang=EN-US><o:p></o:p></span></span></p>

<p style='margin-top:15.0pt;margin-right:0cm;margin-bottom:15.0pt;margin-left:
0cm;text-align:justify;text-justify:inter-ideograph;mso-line-height-alt:1.3pt;
mso-pagination:widow-orphan;background:white'><span lang=EN-US
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>try</span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>里有<span lang=EN-US>return</span>，<span
lang=EN-US>finally</span>还执行么？那么紧跟在这个<span lang=EN-US>try</span>后的<span
lang=EN-US>finally {}</span>里的<span lang=EN-US>code</span>会不会被执行，什么时候被执行，在<span
lang=EN-US>return</span>前还是后<span lang=EN-US><o:p></o:p></span></span></p>

<p style='margin-top:15.0pt;margin-right:0cm;margin-bottom:15.0pt;margin-left:
0cm;text-align:justify;text-justify:inter-ideograph;mso-line-height-alt:1.3pt;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white'>在什么情况下，<span lang=EN-US>finally</span>语句不会执行<span
lang=EN-US><o:p></o:p></span></span></p>

<p style='margin-top:15.0pt;margin-right:0cm;margin-bottom:15.0pt;margin-left:
0cm;text-align:justify;text-justify:inter-ideograph;mso-line-height-alt:1.3pt;
mso-pagination:widow-orphan;background:white'><strong><span lang=EN-US
style='font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white'>throw </span></strong><strong><span
style='font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white'>和<span lang=EN-US> throws </span>有什么区别？</span></strong><span
lang=EN-US style='font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;
color:#333333;letter-spacing:.4pt;background:white'><br>
<strong>OOM</strong></span><strong><span style='font-family:"微软雅黑",sans-serif;
mso-bidi-font-family:微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>你遇到过哪些情况？你是怎么搞定的？</span></strong><span
lang=EN-US style='font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;
color:#333333;letter-spacing:.4pt;background:white'><br>
<strong>SOF</strong></span><strong><span style='font-family:"微软雅黑",sans-serif;
mso-bidi-font-family:微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>你遇到过哪些情况？</span></strong><span
lang=EN-US style='font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;
color:#333333;letter-spacing:.4pt;background:white'><br>
</span><strong><span style='font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>既然我们可以用<span
lang=EN-US>RuntimeException</span>来处理错误，那么你认为为什么<span lang=EN-US>Java</span>中还存在检查型异常</span></strong><span
lang=EN-US style='font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;
color:#333333;letter-spacing:.4pt;background:white'><br>
</span><strong><span style='font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>当自己创建异常类的时候应该注意什么</span></strong><span
lang=EN-US style='font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;
color:#333333;letter-spacing:.4pt;background:white'><br>
</span><strong><span style='font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>导致空指针异常的原因</span></strong><span
lang=EN-US style='font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;
color:#333333;letter-spacing:.4pt;background:white'><br>
</span><strong><span style='font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>异常处理<span lang=EN-US>
handle or declare </span>原则应该如何理解</span></strong><span lang=EN-US
style='font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white'><br>
</span><strong><span style='font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>怎么利用<span lang=EN-US>
JUnit </span>来测试一个方法的异常</span></strong><span lang=EN-US style='font-family:
"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;letter-spacing:.4pt;
background:white'><br>
<strong>catch</strong></span><strong><span style='font-family:"微软雅黑",sans-serif;
mso-bidi-font-family:微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>块里别不写代码有什么问题</span></strong><span
lang=EN-US style='font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;
color:#333333;letter-spacing:.4pt;background:white'><br>
</span><strong><span style='font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>你曾经自定义实现过异常吗？怎么写的</span></strong><span
lang=EN-US style='font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;
color:#333333;letter-spacing:.4pt;background:white'><br>
</span><strong><span style='font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>什么是 异常链</span></strong><span
lang=EN-US style='font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;
color:#333333;letter-spacing:.4pt;background:white'><br>
</span><strong><span style='font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>在<span lang=EN-US>try</span>块中可以抛出异常吗</span></strong><span
lang=EN-US style='font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;
color:#333333;letter-spacing:.4pt'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>JDBC<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>通过<span lang=EN-US>
JDBC </span>连接数据库有哪几种方式<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>阐述<span lang=EN-US>
JDBC </span>操作数据库的基本步骤<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>JDBC </span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>中如何进行事务处理<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>什么是<span lang=EN-US>
JdbcTemplate<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>什么是<span lang=EN-US>
DAO </span>模块<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>使用<span lang=EN-US>
JDBC </span>操作数据库时，如何提升读取数据的性能？如何提升更新数据的性能<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>列出<span lang=EN-US> 5 </span>个应该遵循的<span
lang=EN-US> JDBC </span>最佳实践<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>IO<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>File<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>File</span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>类型中定义了什么方法来创建一级目录<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>File</span><span
style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>类型中定义了什么方法来判断一个文件是否存在<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>流<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>为了提高读写性能，可以采用什么流<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>Java</span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>中有几种类型的流<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>JDK </span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>为每种类型的流提供了一些抽象类以供继承，分别是哪些类<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>对文本文件操作用什么<span
lang=EN-US>I/O</span>流<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>对各种基本数据类型和<span
lang=EN-US>String</span>类型的读写，采用什么流<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>能指定字符编码的<span
lang=EN-US> I/O </span>流类型是什么<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>序列化<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>什么是序列化？如何实现<span
lang=EN-US> Java </span>序列化及注意事项<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>Serializable </span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>与<span lang=EN-US>
Externalizable </span>的区别<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>Socket<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>socket </span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>选项<span lang=EN-US>
TCP NO DELAY </span>是指什么<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>Socket </span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>工作在<span lang=EN-US>
TCP/IP </span>协议栈是哪一层<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>TCP</span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>、<span lang=EN-US>UDP </span>区别及<span
lang=EN-US> Java </span>实现方式<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>说几点<span lang=EN-US>
IO </span>的最佳实践<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>直接缓冲区与非直接缓冲器有什么区别？<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>怎么读写<span lang=EN-US>
ByteBuffer</span>？<span lang=EN-US>ByteBuffer </span>中的字节序是什么<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>当用<span lang=EN-US>System.in.read(buffer)</span>从键盘输入一行<span
lang=EN-US>n</span>个字符后，存储在缓冲区<span lang=EN-US>buffer</span>中的字节数是多少<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>如何使用扫描器类（<span
lang=EN-US>Scanner Class</span>）令牌化<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>面向对象编程（<span
lang=EN-US>OOP</span>）<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>解释下多态性（<span
lang=EN-US>polymorphism</span>），封装性（<span lang=EN-US>encapsulation</span>），内聚（<span
lang=EN-US>cohesion</span>）以及耦合（<span lang=EN-US>coupling</span>）<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>多态的实现原理<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>封装、继承和多态是什么<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>对象封装的原则是什么<span
lang=EN-US>?<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>类<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>获得一个类的类对象有哪些方式<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>重载（<span lang=EN-US>Overload</span>）和重写（<span
lang=EN-US>Override</span>）的区别。重载的方法能否根据返回类型进行区分？<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>说出几条<span lang=EN-US>
Java </span>中方法重载的最佳实践<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>抽象类<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>抽象类和接口的区别<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>抽象类中是否可以有静态的<span
lang=EN-US>main</span>方法<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>抽象类是否可实现<span
lang=EN-US>(implements)</span>接口<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>抽象类是否可继承具体类<span
lang=EN-US>(concrete class)<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>匿名类（<span lang=EN-US>Anonymous
Inner Class</span>）<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>匿名内部类是否可以继承其它类？是否可以实现接口<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>内部类<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>内部类分为几种<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>内部类可以引用它的包含类（外部类）的成员吗<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>请说一下<span lang=EN-US>
Java </span>中为什么要引入内部类？还有匿名内部类<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>继承<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>继承（<span lang=EN-US>Inheritance</span>）与聚合（<span
lang=EN-US>Aggregation</span>）的区别在哪里<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>继承和组合之间有什么不同<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>为什么类只能单继承，接口可以多继承<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>存在两个类，<span
lang=EN-US>B </span>继承<span lang=EN-US> A</span>，<span lang=EN-US>C </span>继承<span
lang=EN-US> B</span>，能将<span lang=EN-US> B </span>转换为<span lang=EN-US> C </span>么？如<span
lang=EN-US> C = (C) B<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>如果类<span lang=EN-US> a
</span>继承类<span lang=EN-US> b</span>，实现接口<span lang=EN-US>c</span>，而类<span
lang=EN-US> b </span>和接口<span lang=EN-US> c </span>中定义了同名变量，请问会出现什么问题<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>接口<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>接口是什么<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>接口是否可继承接口<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>为什么要使用接口而不是直接使用具体类？接口有什么优点<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>泛型<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>泛型的存在是用来解决什么问题<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>泛型的常用特点<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>List</span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>能否转为<span lang=EN-US>List<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>工具类<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>日历<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>Calendar Class</span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>的用途<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>如何在<span lang=EN-US>Java</span>中获取日历类的实例<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>解释一些日历类中的重要方法<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>GregorianCalendar </span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>类是什么<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>SimpleTimeZone </span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>类是什么<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>Locale</span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>类是什么<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>如何格式化日期对象<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>如何添加小时<span
lang=EN-US>(hour)</span>到一个日期对象<span lang=EN-US>(Date Objects)<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>如何将字符串<span
lang=EN-US> YYYYMMDD </span>转换为日期<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>Math<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>Math.round()</span><span
style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>什么作用？<span lang=EN-US>Math.round(11.5)
</span>等于多少？<span lang=EN-US>Math.round(-11.5)</span>等于多少？<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>XML<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>XML</span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>文档定义有几种形式？它们之间有何本质区别？解析<span
lang=EN-US>XML</span>文档有哪几种方式？<span lang=EN-US>DOM </span>和<span lang=EN-US>
SAX </span>解析器有什么不同？<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>Java</span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>解析<span lang=EN-US>XML</span>的方式<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>用<span lang=EN-US>
jdom </span>解析<span lang=EN-US> xml </span>文件时如何解决中文问题？如何解析<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>你在项目中用到了<span
lang=EN-US> XML </span>技术的哪些方面？如何实现<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>动态代理<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>描述动态代理的几种实现方式，分别说出相应的优缺点<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>设计模式<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>什么是设计模式（<span
lang=EN-US>Design Patterns</span>）？你用过哪种设计模式？用在什么场合<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>你知道哪些商业级设计模式？<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>哪些设计模式可以增加系统的可扩展性<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>单例模式<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>除了单例模式，你在生产环境中还用过什么设计模式？<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>写<span lang=EN-US>
Singleton </span>单例模式<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>单例模式的双检锁是什么<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>如何创建线程安全的<span
lang=EN-US> Singleton<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>什么是类的单例模式<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>写出三种单例模式实现<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>适配器模式<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>适配器模式是什么？什么时候使用<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>适配器模式和代理模式之前有什么不同<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>适配器模式和装饰器模式有什么区别<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>什么时候使用享元模式<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>什么时候使用组合模式<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>什么时候使用访问者模式<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>什么是模板方法模式<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>请给出<span lang=EN-US>1</span>个符合开闭原则的设计模式的例子<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>开放问题<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>用一句话概括<span
lang=EN-US> Web </span>编程的特点<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>Google</span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>是如何在一秒内把搜索结果返回给用户<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>哪种依赖注入方式你建议使用，构造器注入，还是<span
lang=EN-US> Setter</span>方法注入<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>树（二叉或其他）形成许多普通数据结构的基础。请描述一些这样的数据结构以及何时可以使用它们<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>某一项功能如何设计<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>线上系统突然变得异常缓慢，你如何查找问题<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>什么样的项目不适合用框架<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>新浪微博是如何实现把微博推给订阅者<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>简要介绍下从浏览器输入<span
lang=EN-US> URL </span>开始到获取到请求界面之后<span lang=EN-US> Java Web </span>应用中发生了什么<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>请你谈谈<span lang=EN-US>SSH</span>整合<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>高并发下，如何做到安全的修改同一行数据<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>12306</span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>网站的订票系统如何实现，如何保证不会票不被超卖<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>网站性能优化如何优化的<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>聊了下曾经参与设计的服务器架构<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>请思考一个方案，实现分布式环境下的<span
lang=EN-US> countDownLatch<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>请思考一个方案，设计一个可以控制缓存总体大小的自动适应的本地缓存<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>在你的职业生涯中，算得上最困难的技术挑战是什么<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>如何写一篇设计文档，目录是什么<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>大写的<span lang=EN-US>O</span>是什么？举几个例子<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>编程中自己都怎么考虑一些设计原则的，比如开闭原则，以及在工作中的应用<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>解释一下网络应用的模式及其特点<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>设计一个在线文档系统，文档可以被编辑，如何防止多人同时对同一份文档进行编辑更新<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>说出数据连接池的工作机制是什么<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>怎么获取一个文件中单词出现的最高频率<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>描述一下你最常用的编程风格<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>如果有机会重新设计你们的产品，你会怎么做<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>如何搭建一个高可用系统<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>如何启动时不需输入用户名与密码<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>如何在基于<span lang=EN-US>Java</span>的<span
lang=EN-US>Web</span>项目中实现文件上传和下载<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>如何实现一个秒杀系统，保证只有几位用户能买到某件商品。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>如何实现负载均衡，有哪些算法可以实现<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>如何设计一个购物车？想想淘宝的购物车如何实现的<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>如何设计一套高并发支付方案，架构如何设计<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>如何设计建立和保持<span
lang=EN-US> 100w </span>的长连接<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>如何避免浏览器缓存。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>如何防止缓存雪崩<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>如果<span lang=EN-US>AB</span>两个系统互相依赖，如何解除依<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>如果有人恶意创建非法连接，怎么解决<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>如果有几十亿的白名单，每天白天需要高并发查询，晚上需要更新一次，如何设计这个功能<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>如果系统要使用超大整数（超过<span
lang=EN-US>long</span>长度范围），请你设计一个数据结构来存储这种超大型数字以及设计一种算法来实现超大整数加法运算）<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>如果要设计一个图形系统，请你设计基本的图形元件<span
lang=EN-US>(Point,Line,Rectangle,Triangle)</span>的简单实现<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>如果让你实现一个并发安全的链表，你会怎么做<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>应用服务器与<span
lang=EN-US>WEB </span>服务器的区别？应用服务器怎么监控性能，各种方式的区别？你使用过的应用服务器优化技术有哪些<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>大型网站在架构上应当考虑哪些问题<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>有没有处理过线上问题？出现内存泄露，<span
lang=EN-US>CPU</span>利用率标高，应用无响应时如何处理的<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>最近看什么书，印象最深刻的是什么<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>描述下常用的重构技巧<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>你使用什么版本管理工具？分支（<span
lang=EN-US>Branch</span>）与标签（<span lang=EN-US>Tag</span>）之间的区别在哪里<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>你有了解过存在哪些反模式（<span
lang=EN-US>Anti-Patterns</span>）吗<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>你用过的网站前端优化的技术有哪些<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>如何分析<span lang=EN-US>Thread
dump<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>你如何理解<span lang=EN-US>AOP</span>中的连接点（<span
lang=EN-US>Joinpoint</span>）、切点（<span lang=EN-US>Pointcut</span>）、增强（<span
lang=EN-US>Advice</span>）、引介（<span lang=EN-US>Introduction</span>）、织入（<span
lang=EN-US>Weaving</span>）、切面（<span lang=EN-US>Aspect</span>）这些概念<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>你是如何处理内存泄露或者栈溢出问题的<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>你们线上应用的<span
lang=EN-US> JVM </span>参数有哪些<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>怎么提升系统的<span
lang=EN-US>QPS</span>和吞吐量<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>知识面<span lang=EN-US><o:p></o:p></span></span></p>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white;font-weight:normal'>解释什么是<span lang=EN-US>
MESI </span>协议<span lang=EN-US>(</span>缓存一致性<span lang=EN-US>)<o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white;font-weight:normal'>谈谈<span lang=EN-US>
reactor </span>模型<span lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span lang=EN-US
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white;font-weight:normal'>Java
9 </span><span style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;
mso-bidi-font-family:微软雅黑;color:#333333;letter-spacing:.4pt;background:white;
font-weight:normal'>带来了怎样的新功能<span lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span lang=EN-US
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white;font-weight:normal'>Java
</span><span style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white;font-weight:normal'>与<span
lang=EN-US> C++ </span>对比，<span lang=EN-US>C++ </span>或<span lang=EN-US> Java </span>中的异常处理机制的简单原理和应用<span
lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white;font-weight:normal'>简单讲讲<span lang=EN-US>
Tomcat </span>结构，以及其类加载器流程<span lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white;font-weight:normal'>虚拟内存是什么<span
lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white;font-weight:normal'>阐述下<span lang=EN-US>
SOLID </span>原则<span lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white;font-weight:normal'>请简要讲一下你对测试驱动开发（<span
lang=EN-US>TDD</span>）的认识<span lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span lang=EN-US
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white;font-weight:normal'>CDN</span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white;font-weight:normal'>实现原理<span
lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span lang=EN-US
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white;font-weight:normal'>Maven
</span><span style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white;font-weight:normal'>和<span
lang=EN-US> ANT </span>有什么区别<span lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span lang=EN-US
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white;font-weight:normal'>UML</span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white;font-weight:normal'>中有哪些常用的图<span
lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span lang=EN-US
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white;font-weight:normal'>Linux<o:p></o:p></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span lang=EN-US
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white;font-weight:normal'>Linux
</span><span style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white;font-weight:normal'>下<span
lang=EN-US> IO </span>模型有几种，各自的含义是什么。<span lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span lang=EN-US
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white;font-weight:normal'>Linux
</span><span style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white;font-weight:normal'>系统下你关注过哪些内核参数，说说你知道的<span
lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span lang=EN-US
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white;font-weight:normal'>Linux
</span><span style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white;font-weight:normal'>下用一行命令查看文件的最后五行<span
lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white;font-weight:normal'>平时用到哪些<span
lang=EN-US> Linux </span>命令<span lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white;font-weight:normal'>用一行命令输出正在运行的<span
lang=EN-US> Java </span>进程<span lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white;font-weight:normal'>使用什么命令来确定是否有<span
lang=EN-US> Tomcat </span>实例运行在机器上<span lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white;font-weight:normal'>什么是<span lang=EN-US>
N+1 </span>难题<span lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white;font-weight:normal'>什么是<span lang=EN-US>
paxos </span>算法<span lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white;font-weight:normal'>什么是<span lang=EN-US>
restful</span>，讲讲你理解的<span lang=EN-US> restful<o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white;font-weight:normal'>什么是<span lang=EN-US>
zab </span>协议<span lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white;font-weight:normal'>什么是领域模型<span
lang=EN-US>(domain model)</span>？贫血模型<span lang=EN-US>(anaemic domain model) </span>和充血模型<span
lang=EN-US>(rich domain model)</span>有什么区别<span lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white;font-weight:normal'>什么是领域驱动开发（<span
lang=EN-US>Domain Driven Development</span>）<span lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white;font-weight:normal'>介绍一下了解的<span
lang=EN-US> Java </span>领域的<span lang=EN-US> Web Service </span>框架<span
lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span lang=EN-US
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white;font-weight:normal'>Web
Server</span><span style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;
mso-bidi-font-family:微软雅黑;color:#333333;letter-spacing:.4pt;background:white;
font-weight:normal'>、<span lang=EN-US>Web Container </span>与<span lang=EN-US>
Application Server </span>的区别是什么<span lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white;font-weight:normal'>微服务（<span lang=EN-US>MicroServices</span>）与巨石型应用（<span
lang=EN-US>Monolithic Applications</span>）之间的区别在哪里<span lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white;font-weight:normal'>描述<span lang=EN-US>
Cookie </span>和<span lang=EN-US> Session </span>的作用，区别和各自的应用范围，<span
lang=EN-US>Session</span>工作原理<span lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white;font-weight:normal'>你常用的持续集成（<span
lang=EN-US>Continuous Integration</span>）、静态代码分析（<span lang=EN-US>Static Code
Analysis</span>）工具有哪些<span lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white;font-weight:normal'>简述下数据库正则化（<span
lang=EN-US>Normalizations</span>）<span lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span lang=EN-US
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white;font-weight:normal'>KISS,DRY,YAGNI
</span><span style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white;font-weight:normal'>等原则是什么含义<span
lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white;font-weight:normal'>分布式事务的原理，优缺点，如何使用分布式事务？<span
lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white;font-weight:normal'>布式集群下如何做到唯一序列号<span
lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white;font-weight:normal'>网络<span lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span lang=EN-US
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white;font-weight:normal'>HTTPS
</span><span style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white;font-weight:normal'>的加密方式是什么，讲讲整个加密解密流程<span
lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span lang=EN-US
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white;font-weight:normal'>HTTPS</span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white;font-weight:normal'>和<span
lang=EN-US>HTTP</span>的区别<span lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span lang=EN-US
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white;font-weight:normal'>HTTP</span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white;font-weight:normal'>连接池实现原理<span
lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span lang=EN-US
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white;font-weight:normal'>HTTP</span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white;font-weight:normal'>集群方案<span
lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span lang=EN-US
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white;font-weight:normal'>Nginx</span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white;font-weight:normal'>、<span
lang=EN-US>lighttpd</span>、<span lang=EN-US>Apache</span>三大主流<span lang=EN-US>
Web</span>服务器的区别<span lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white;font-weight:normal'>是否看过框架的一些代码<span
lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white;font-weight:normal'>持久层设计要考虑的问题有哪些？你用过的持久层框架有哪些<span
lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white;font-weight:normal'>数值提升是什么<span
lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white;font-weight:normal'>你能解释一下里氏替换原则吗<span
lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white;font-weight:normal'>你是如何测试一个应用的？知道哪些测试框架<span
lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white;font-weight:normal'>传输层常见编程协议有哪些？并说出各自的特点<span
lang=EN-US><o:p></o:p></span></span></h2>

<h2 style='margin:0cm;text-align:justify;text-justify:inter-ideograph;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.0pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white'>编程题</span><span lang=EN-US
style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt'><o:p></o:p></span></h2>

<p style='margin-top:15.0pt;margin-right:0cm;margin-bottom:15.0pt;margin-left:
0cm;text-align:justify;text-justify:inter-ideograph;mso-line-height-alt:1.3pt;
mso-pagination:widow-orphan;background:white'><strong><span style='font-family:
"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;letter-spacing:.4pt;
background:white'>计算加班费</span></strong><span lang=EN-US style='font-family:
"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;letter-spacing:.4pt'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>加班<span lang=EN-US>10</span>小时以下加班费是时薪的<span
lang=EN-US>1.5</span>倍。加班<span lang=EN-US>10</span>小时或以上，按<span lang=EN-US>4</span>元<span
lang=EN-US>/</span>时算。提示：（一个月工作<span lang=EN-US>26</span>天，一天正常工作<span
lang=EN-US>8</span>小时）<span lang=EN-US><o:p></o:p></span></span></p>

<p style='margin-top:15.0pt;margin-right:0cm;margin-bottom:15.0pt;margin-left:
0cm;text-align:justify;text-justify:inter-ideograph;mso-line-height-alt:1.3pt;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white'>计算<span lang=EN-US>1000</span>月薪，加班<span
lang=EN-US>9</span>小时的加班费<span lang=EN-US><o:p></o:p></span></span></p>

<p style='margin-top:15.0pt;margin-right:0cm;margin-bottom:15.0pt;margin-left:
0cm;text-align:justify;text-justify:inter-ideograph;mso-line-height-alt:1.3pt;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white'>计算<span lang=EN-US>2500</span>月薪，加班<span
lang=EN-US>11</span>小时的加班费<span lang=EN-US><o:p></o:p></span></span></p>

<p style='margin-top:15.0pt;margin-right:0cm;margin-bottom:15.0pt;margin-left:
0cm;text-align:justify;text-justify:inter-ideograph;mso-line-height-alt:1.3pt;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white'>计算<span lang=EN-US>1000</span>月薪，加班<span
lang=EN-US>15</span>小时的加班费<span lang=EN-US><o:p></o:p></span></span></p>

<p style='margin-top:15.0pt;margin-right:0cm;margin-bottom:15.0pt;margin-left:
0cm;text-align:justify;text-justify:inter-ideograph;mso-line-height-alt:1.3pt;
mso-pagination:widow-orphan;background:white'><strong><span style='font-family:
"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;letter-spacing:.4pt;
background:white'>卖东西</span></strong><span lang=EN-US style='font-family:"微软雅黑",sans-serif;
mso-bidi-font-family:微软雅黑;color:#333333;letter-spacing:.4pt'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>一家商场有红苹果和青苹果出售。（红苹果<span
lang=EN-US>5</span>元<span lang=EN-US>/</span>个，青苹果<span lang=EN-US>4</span>元<span
lang=EN-US>/</span>个）。<span lang=EN-US><o:p></o:p></span></span></p>

<p style='margin-top:15.0pt;margin-right:0cm;margin-bottom:15.0pt;margin-left:
0cm;text-align:justify;text-justify:inter-ideograph;mso-line-height-alt:1.3pt;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white'>模拟一个进货。红苹果跟青苹果各进<span lang=EN-US>200</span>个。<span
lang=EN-US><o:p></o:p></span></span></p>

<p style='margin-top:15.0pt;margin-right:0cm;margin-bottom:15.0pt;margin-left:
0cm;text-align:justify;text-justify:inter-ideograph;mso-line-height-alt:1.3pt;
mso-pagination:widow-orphan;background:white'><span style='font-size:12.5pt;
font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;
letter-spacing:.4pt;background:white'>模拟一个出售。红苹果跟青苹果各买出<span lang=EN-US>10</span>个。每卖出一个苹果需要进行统计。<span
lang=EN-US><o:p></o:p></span></span></p>

<p style='margin-top:15.0pt;margin-right:0cm;margin-bottom:15.0pt;margin-left:
0cm;text-align:justify;text-justify:inter-ideograph;mso-line-height-alt:1.3pt;
mso-pagination:widow-orphan;background:white'><span style='font-family:"微软雅黑",sans-serif;
mso-bidi-font-family:微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>提示：一个苹果是一个单独的实体。</span><span
lang=EN-US style='font-family:"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;
color:#333333;letter-spacing:.4pt'><o:p></o:p></span></p>

<p style='margin-top:15.0pt;margin-right:0cm;margin-bottom:15.0pt;margin-left:
0cm;text-align:justify;text-justify:inter-ideograph;mso-line-height-alt:1.3pt;
mso-pagination:widow-orphan;background:white'><strong><span style='font-family:
"微软雅黑",sans-serif;mso-bidi-font-family:微软雅黑;color:#333333;letter-spacing:.4pt;
background:white'>日期提取</span></strong><span lang=EN-US style='font-family:"微软雅黑",sans-serif;
mso-bidi-font-family:微软雅黑;color:#333333;letter-spacing:.4pt'><o:p></o:p></span></p>

<p style='margin-top:15.0pt;margin-right:0cm;margin-bottom:15.0pt;margin-left:
0cm;text-align:justify;text-justify:inter-ideograph;mso-line-height-alt:1.3pt;
mso-pagination:widow-orphan;background:white'><span style='font-family:"微软雅黑",sans-serif;
mso-bidi-font-family:微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>有这样一个时间字符串：<span
lang=EN-US>2008-8-8 20:08:08 </span>， 请编写能够匹配它的正则表达式，并编写<span lang=EN-US>Java</span>代码将日期后面的时分秒提取出来，即：<span
lang=EN-US>20:08:08</span></span><span lang=EN-US style='font-family:"微软雅黑",sans-serif;
mso-bidi-font-family:微软雅黑;color:#333333;letter-spacing:.4pt'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><strong><span
style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>线程<span lang=EN-US><o:p></o:p></span></span></strong></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>8</span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>设计<span lang=EN-US>4</span>个线程，其中两个线程每次对<span
lang=EN-US>j</span>增加<span lang=EN-US>1</span>，另外两个线程对<span lang=EN-US>j</span>每次减少<span
lang=EN-US>1</span>。写出程序。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>用<span lang=EN-US>Java</span>写一个多线程程序，如写四个线程，二个加<span
lang=EN-US>1</span>，二个对一个变量减一，输出<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>wait-notify </span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>写一段代码来解决生产者<span
lang=EN-US>-</span>消费者问题<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><strong><span
style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>数字<span lang=EN-US><o:p></o:p></span></span></strong></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>判断<span lang=EN-US>101-200</span>之间有多少个素数，并输出所有素数<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>用最有效率的方法算出<span
lang=EN-US>2</span>乘以<span lang=EN-US>17</span>等于多少<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>有<span lang=EN-US> 1 </span>亿个数字，其中有<span
lang=EN-US> 2 </span>个是重复的，快速找到它，时间和空间要最优<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>2 </span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>亿个随机生成的无序整数<span
lang=EN-US>,</span>找出中间大小的值<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>10 </span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>亿个数字里里面找最小的 <span
lang=EN-US>10 </span>个<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>1</span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>到<span lang=EN-US>1</span>亿的自然数，求所有数的拆分后的数字之和，如<span
lang=EN-US>286 </span>拆分成<span lang=EN-US>2</span>、<span lang=EN-US>8</span>、<span
lang=EN-US>6</span>，如<span lang=EN-US>1</span>到<span lang=EN-US>11</span>拆分后的数字之和<span
lang=EN-US> =&gt; 1 + </span>…<span lang=EN-US> + 9 + 1 + 0 + 1 + 1<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>一个数如果恰好等于它的因子之和，这个数就称为
“完数 “。例如<span lang=EN-US>6=1</span>＋<span lang=EN-US>2</span>＋<span lang=EN-US>3.</span>编程
找出<span lang=EN-US>1000</span>以内的所有完数<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>一个数组中所有的元素都出现了三次，只有一个元素出现了一次找到这个元素<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>一球从<span lang=EN-US>100</span>米高度自由落下，每次落地后反跳回原高度的一半；再落下，求它在
第<span lang=EN-US>10</span>次落地时，共经过多少米？第<span lang=EN-US>10</span>次反弹多高？<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>求<span lang=EN-US>100</span>－<span
lang=EN-US>1000</span>内质数的和<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>求<span lang=EN-US>1</span>到<span
lang=EN-US>100</span>的和的平均数<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>求<span lang=EN-US>s=a+a+aaa+aaaa+aa</span>…<span
lang=EN-US>a</span>的值，其中<span lang=EN-US>a</span>是一个数字。例如<span lang=EN-US>2+22+222+2222+22222(</span>此时共有<span
lang=EN-US>5</span>个数相加<span lang=EN-US>)</span>，几个数相加有键盘控制。 求出<span
lang=EN-US>1</span>到<span lang=EN-US>100</span>的和<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>算出<span lang=EN-US>1</span>到<span
lang=EN-US>40</span>的质数，放进数组里<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>显示放组里的数<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>找出第<span lang=EN-US>[5]</span>个数<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>删除第<span lang=EN-US>[9]</span>个数，再显示删除后的第<span
lang=EN-US>[9]</span>个<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>有<span lang=EN-US>
3n+1 </span>个数字，其中<span lang=EN-US> 3n </span>个中是重复的，只有<span lang=EN-US> 1 </span>个是不重复的，怎么找出来。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>有一组数<span lang=EN-US>1.1.2.3.5.8.13.21.34</span>。写出程序随便输入一个数就能给出和前一组数字同规律的头<span
lang=EN-US>5</span>个数<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>计算指定数字的阶乘<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>开发<span lang=EN-US>
Fizz Buzz<o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>给定一个包含<span
lang=EN-US> N </span>个整数的数组，找出丢失的整数<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>一个排好序的数组，找出两数之和为<span
lang=EN-US>m</span>的所有组合<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>将一个正整数分解质因数。例如：输入<span
lang=EN-US>90,</span>打印出<span lang=EN-US>90=2*3*3*5</span>。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>打印出所有的 “水仙花数 “，所谓 “水仙花数
“是指一个三位数，其各位数字立方和等于该数本身。例如：<span lang=EN-US>153</span>是一个 “水仙花数 “，因为<span
lang=EN-US>153=1</span>的三次方＋<span lang=EN-US>5</span>的三次方＋<span lang=EN-US>3</span>的三次方<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>原地交换两个变量的值<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>找出<span lang=EN-US>4</span>字节整数的中位数<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>找到整数的平方根<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>实现斐波那契<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><strong><span
style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>网络<span lang=EN-US><o:p></o:p></span></span></strong></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>用<span lang=EN-US>Java
Socket</span>编程，读服务器几个字符，再写入本地显示<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><strong><span
style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>反射<span lang=EN-US><o:p></o:p></span></span></strong></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>反射机制提供了什么功能？<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>反射是如何实现的<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>哪里用到反射机制<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>反射中<span lang=EN-US>
Class.forName </span>和<span lang=EN-US> ClassLoader </span>区别<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>反射创建类实例的三种方式是什么<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>如何通过反射调用对象的方法<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>如何通过反射获取和设置对象私有字段的值<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>反射机制的优缺点<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><strong><span
style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>数据库<span lang=EN-US><o:p></o:p></span></span></strong></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>写一段<span lang=EN-US>
JDBC </span>连<span lang=EN-US>Oracle</span>的程序<span lang=EN-US>,</span>并实现数据查询<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><strong><span
style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>算法<span lang=EN-US><o:p></o:p></span></span></strong></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>50</span><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>个人围坐一圈，当数到三或者三的倍数出圈，问剩下的人是谁，原来的位置是多少<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>实现一个电梯模拟器用<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>写一个冒泡排序<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>写一个折半查找<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>随机产生<span lang=EN-US>20</span>个不能重复的字符并排序<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>写一个函数，传入<span
lang=EN-US> 2 </span>个有序的整数数组，返回一个有序的整数数组<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>写一段代码在遍历<span
lang=EN-US> ArrayList </span>时移除一个元素<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>古典问题：有一对兔子，从出生后第<span
lang=EN-US>3</span>个月起每个月都生一对兔子，小兔子长到第四个月后每个月又生一对兔子，假如兔子都不死，问每个月的兔子总数为多少<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>约瑟芬环游戏<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><strong><span
style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>正则<span lang=EN-US><o:p></o:p></span></span></strong></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>请编写一段匹配<span
lang=EN-US>IP</span>地址的正则表达式<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><span
style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>写出一个正则表达式来判断一个字符串是否是一个数字<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:20.4pt;mso-pagination:widow-orphan'><strong><span
style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;mso-bidi-font-family:
微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>字符串<span lang=EN-US><o:p></o:p></span></span></strong></p>

<p class=MsoNormal><span style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;
mso-bidi-font-family:微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>写一个方法，入一个文件名和一个字符串，统计这个字符串在这个文件中出现的次数。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal><span style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;
mso-bidi-font-family:微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>写一个程序找出所有字符串的组合，并检查它们是否是回文串<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal><span style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;
mso-bidi-font-family:微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>写一个字符串反转函数，输入<span
lang=EN-US>abcde</span>转换成<span lang=EN-US>edcba</span>代码<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal><span style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;
mso-bidi-font-family:微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>小游戏，倒转句子中的单词<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal><span style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;
mso-bidi-font-family:微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>将<span
lang=EN-US>GB2312</span>编码的字符串转换为<span lang=EN-US>ISO-8859-1</span>编码的字符串<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal><span style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;
mso-bidi-font-family:微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>请写一段代码来计算给定文本内字符“<span
lang=EN-US>A</span>”的个数。分别用迭代和递归两种方式<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal><span style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;
mso-bidi-font-family:微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>编写一个截取字符串的函数，输入为一个字符串和字节数，输出为按字节截取的字符串。
但是要保证汉字不被截半个，如“我<span lang=EN-US>ABC</span>”<span lang=EN-US>4</span>，应该截为“我<span
lang=EN-US>AB</span>”，输入“我<span lang=EN-US>ABC</span>汉<span lang=EN-US>DEF</span>”，<span
lang=EN-US>6</span>，应该输出为“我<span lang=EN-US>ABC</span>”而不是“我<span lang=EN-US>ABC+</span>汉的半个”<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal><span style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;
mso-bidi-font-family:微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>给定<span
lang=EN-US> 2 </span>个包含单词列表（每行一个）的文件，编程列出交集<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal><span style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;
mso-bidi-font-family:微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>打印出一个字符串的所有排列<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal><span style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;
mso-bidi-font-family:微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>将一个键盘输入的数字转化成中文输出<span
lang=EN-US>(</span>例如：输入<span lang=EN-US>1234567</span>，输出<span lang=EN-US>:</span>一百二拾三万四千五百六拾七<span
lang=EN-US>)<o:p></o:p></span></span></p>

<p class=MsoNormal><span style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;
mso-bidi-font-family:微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>在<span
lang=EN-US>Web</span>应用开发过程中经常遇到输出某种编码的字符，如从<span lang=EN-US> GBK </span>到<span
lang=EN-US> ISO8859-1</span>等，如何输出一个某种编码的字符串<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal><strong><span style='font-size:12.0pt;font-family:"微软雅黑",sans-serif;
mso-bidi-font-family:微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>日期<span
lang=EN-US><o:p></o:p></span></span></strong></p>

<p class=MsoNormal><span style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;
mso-bidi-font-family:微软雅黑;color:#333333;letter-spacing:.4pt;background:white'>计算两个日期之间的差距<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:12.5pt;font-family:"微软雅黑",sans-serif;
mso-bidi-font-family:微软雅黑;color:#333333;letter-spacing:.4pt;background:white'><o:p>&nbsp;</o:p></span></p>

</div>

</body>

</html>
