深拷贝与浅拷贝：
    浅拷贝只复制指向某个对象的指针，而不复制对象本身，新旧对象还是共享同一块内存（分支）。
    深拷贝会另外创造一个一模一样的对象，新对象跟原对象不共享内存，修改新对象不会改到原对象，是“值”而不是“引用”（不是分支），速度较慢并且花销较大

hash算法：
    将任意长度的二进制值串映射为固定长度的二进制值串，这个映射的规则就是哈希算法，而通过原始数据映射之后得到的二进制值串就是哈希值（散列值）

接口和抽象类的区别：
    实现接口的关键字为implements，继承抽象类的关键字为extends。
    一个类可以实现多个接口，但一个类只能继承一个抽象类。
    接口指特定功能的实现，而抽象类强调所属关系
    接口是一种特殊的抽象类
    举个简单的例子，飞机和鸟是不同类的事物，但是它们都有一个共性，就是都会飞。那么在设计的时候，可以将飞机设计为一个类Airplane，将鸟设计为一个类Bird，
但是不能将飞行 这个特性也设计为类，因此它只是一个行为特性，并不是对一类事物的抽象描述。此时可以将 飞行 设计为一个接口Fly，包含方法fly()，
然后Airplane和Bird分别根据自己的需要实现Fly这个接口。然后至于有不同种类的飞机，比如战斗机、民用飞机等直接继承Airplane即可，对于鸟也是类似的，
不同种类的鸟直接继承Bird类即可。从这里可以看出，继承是一个"是不是"的关系，而 接口 实现则是"有没有"的关系。如果一个类继承了某个抽象类，则子类必定是抽象类的种类，
而接口实现则是有没有、具备不具备的关系，比如鸟是否能飞（或者是否具备飞行这个特点），能飞行则可以实现这个接口，不能飞行就不实现这个接口。

Jquery选择器：
    jQuery选择器是jQuery为我们提供的一组方法，让我们更加方便的获取到页面中的元素
    jQuery常用选择器：层次选择器，交集选择器，并集选择器，过滤选择器

==与equals的区别：
    equals()是方法，==是操作符；
    1、equals()：用来检测两个对象是否相等，即两个对象的内容是否相等。
    2、==：用于比较引用和比较基本数据类型时具有不同的功能，具体如下：
    基础数据类型：比较的是他们的值是否相等，比如两个int类型的变量，比较的是变量的值是否一样。
    引用数据类型：比较的是两个引用对象的地址是否相同

ajax参数：
    url:要求为String类型的参数，（默认为当前页地址）发送请求的地址。
    type:要求为String类型的参数，请求方式（post或get）默认为get。
    username：要求为String类型的参数，用于响应HTTP访问认证请求的用户名。
    password：要求为String类型的参数，用于响应HTTP访问认证请求的密码。
    date：返回的相关数据

controller常用注解：
    @RequestMapping注解：该注解有两个常用的属性，value表示访问路径，method表示请求的方法，不指定method时，任何形式的访问请求都可以接受
    @ResponseBody注解：正常情况下，Controller返回的是模型视图，@ResponseBody可声明在类上，也可声明在方法上，表明方法的返回类型为json格式，不再返回视图。
    @RestController注解：作用相当于@Controller与@ResponseBody的联合使用，类中所有方法返回的类型均为json格式

mysql的索引与视图：
    索引：索引是一种对数据表中一列或者多列值进行排序的一种存储结构。相当于书本的目录，可以让我们快速的查找到我们所需要查找的内容。
    数据量较大，经常作为条件被检索，DML操作较少的字段适合添加索引，索引有很多类例如：主键索引，唯一索引
    视图：视图是指基于SQL语句查询出来的数据组成的虚拟表，但是这个虚拟表可以进行增删改操作，并且通过对视图的操作，会影响到原表数据。
    视图可以隐藏表的实现细节，可以将复杂的SQL语句以视图对象的形式新建，简化开发

&与&&的区别：
    &&具有短路功能，而&不具有短路功能
    当&运算符两侧的表达式的结果均为真时，整个运算结果才为真。
    当&&操作符第一个表达式为 false时，结果为 false，并且不再计算第二个表达式。

final与finally的区别：
    final有最终态，无法改变的意思，用于修饰常量或变量，为了阻止改变与提高效率
    finally关键字用于try后面，finally块中的代码总是执行，不论是否发生异常。一般用于清理工作、关闭链接等类型的语句，如：文件流作为一种资源，在使用完毕之后要进行流的关闭，否则会造成资源的浪费的。

什么情况下可能出现线程安全问题：
    多个线程之间操作同一个数据或有一个线程修改这个数据

线程安全怎么解决：
    同步代码块或是同步方法

同步代码块和同步方法有什么区别：
    同步方法直接在方法上加 synchronized 实现加锁，同步代码块则在方法内 部加锁。很明显，同步方法锁的范围比较大，而同步代码块范围要小点。一 般同步的范围越大，性能就越差

重定向和请求转发的区别：
    1、重定向是两次请求，转发是一次请求，因此转发的速度要快于重定向
    2、重定向之后地址栏上的地址会发生变化，变化成第二次请求的地址，转发之后地址栏上的地址不会变化，还是第一次请求的地址
    3、转发是服务器行为，重定向是客户端行为。重定向时浏览器上的网址改变 ,转发是浏览器上的网址不变
    4、重定向是两次request，转发只有一次请求
    5、重定向时的网址可以是任何网址，转发的网址必须是本站点的网址

StringBuffer与StringBuilder的区别：
    StringBuilder效率高，StringBuffer更安全

SpringMVC：
    SpringMVC是一种基于Java，实现了Web MVC设计模式的轻量级Web框架，将Web层进行职责解耦，简化开发

